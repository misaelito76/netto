{ "version": 3, "sources": ["webpack:///./src/$_lazy_route_resource lazy namespace object", "webpack:///./src/app/ADMIN/admin-update-schedule/admin-update-schedule.component.css", "webpack:///./src/app/ADMIN/admin-update-schedule/admin-update-schedule.component.html", "webpack:///./src/app/ADMIN/admin-update-schedule/admin-update-schedule.component.ts", "webpack:///./src/app/admin-list/admin-list.component.css", "webpack:///./src/app/admin-list/admin-list.component.html", "webpack:///./src/app/admin-list/admin-list.component.ts", "webpack:///./src/app/app-routing.module.ts", "webpack:///./src/app/app.component.css", "webpack:///./src/app/app.component.html", "webpack:///./src/app/app.component.ts", "webpack:///./src/app/app.module.ts", "webpack:///./src/app/componentes_/not-found-page/not-found-page.component.html", "webpack:///./src/app/componentes_/not-found-page/not-found-page.component.scss", "webpack:///./src/app/componentes_/not-found-page/not-found-page.component.ts", "webpack:///./src/app/componentes_/users/login/login.component.css", "webpack:///./src/app/componentes_/users/login/login.component.html", "webpack:///./src/app/componentes_/users/login/login.component.ts", "webpack:///./src/app/componentes_/users/profile/profile.component.css", "webpack:///./src/app/componentes_/users/profile/profile.component.html", "webpack:///./src/app/componentes_/users/profile/profile.component.ts", "webpack:///./src/app/componentes_/users/register/register.component.css", "webpack:///./src/app/componentes_/users/register/register.component.html", "webpack:///./src/app/componentes_/users/register/register.component.ts", "webpack:///./src/app/guards_/auth.guard.ts", "webpack:///./src/app/home/home.component.css", "webpack:///./src/app/home/home.component.html", "webpack:///./src/app/home/home.component.ts", "webpack:///./src/app/my-schedule/my-schedule.component.css", "webpack:///./src/app/my-schedule/my-schedule.component.html", "webpack:///./src/app/my-schedule/my-schedule.component.ts", "webpack:///./src/app/nav-bar/nav-bar.component.css", "webpack:///./src/app/nav-bar/nav-bar.component.html", "webpack:///./src/app/nav-bar/nav-bar.component.ts", "webpack:///./src/app/schedule-cleaning/schedule-cleaning.component.html", "webpack:///./src/app/schedule-cleaning/schedule-cleaning.component.scss", "webpack:///./src/app/schedule-cleaning/schedule-cleaning.component.ts", "webpack:///./src/app/services/auth.service.ts", "webpack:///./src/app/services/crud.service.ts", "webpack:///./src/app/services/user.service.ts", "webpack:///./src/app/update-schedule/update-schedule.component.css", "webpack:///./src/app/update-schedule/update-schedule.component.html", "webpack:///./src/app/update-schedule/update-schedule.component.ts", "webpack:///./src/environments/environment.ts", "webpack:///./src/main.ts"], "names": [], "mappings": "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", "file": "main.js", "sourcesContent": ["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FETUlOL2FkbWluLXVwZGF0ZS1zY2hlZHVsZS9hZG1pbi11cGRhdGUtc2NoZWR1bGUuY29tcG9uZW50LmNzcyJ9 */\"", "module.exports = \"<!-- Top navigation -->\\n<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n    <a class=\\\"navbar-brand col-sm col-md-0 mr-0\\\" routerLink=\\\"/\\\">\\n        <span class=\\\"user-image\\\" style=\\\"background-image: url('assets/Netto.png')\\\"></span>Netto\\n    </a>\\n\\n    <a class=\\\"nav-item text-white\\\" style=\\\"padding-right: .90rem\\\" routerLink=\\\"/login\\\" *ngIf=\\\"isLogin\\\">\\n        <span>Login</span>\\n    </a>\\n    <a class=\\\"nav-item \\\" *ngIf=\\\"!isLogin\\\">\\n        <a class=\\\"nav-link text-white\\\" (click)=\\\"goBack()\\\">Back</a>\\n    </a>\\n    <div class=\\\"btn-toolbar mb-2 mb-md-0\\\">\\n\\n\\n    </div>\\n\\n\\n</nav>\\n\\n\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <nav style=\\\"background-color:black\\\" class=\\\"col-md-2 d-md-block  sidebar text-white\\\">\\n            <div class=\\\"sidebar-sticky\\\">\\n                <ul class=\\\"nav flex-column\\\">\\n\\n\\n                    <!-- routerLink=\\\"/view-students\\\" to navigate to view-students component -->\\n                    <!-- routerLinkActive=\\\"active\\\" activates active class for component-->\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link text-white\\\" routerLink=\\\"/admin-list\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-list-ul\\\"></i>My schedule\\n                        </a>\\n                    </li>\\n\\n                    <!-- routerLink=\\\"/update-schedule\\\" to navigate to view-students component -->\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link text-white\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-plus\\\"></i>Update\\n                        </a>\\n                    </li>\\n\\n                    <!-- routerLink=\\\"/update-schedule\\\" to navigate to view-students component -->\\n                    <li class=\\\"nav-item \\\">\\n                        <a class=\\\"nav-link text-white\\\" routerLink=\\\"/update-schedule\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-plus\\\"></i>xx\\n                        </a>\\n                    </li>\\n\\n                    <!-- routerLink=\\\"/update-schedule\\\" to navigate to view-students component -->\\n                    <li class=\\\"nav-item \\\">\\n                        <a class=\\\"nav-link text-white\\\" routerLink=\\\"/update-schedule\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-plus\\\"></i>xx\\n                        </a>\\n                    </li>\\n\\n                    <!-- routerLink=\\\"/update-schedule\\\" to navigate to view-students component -->\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link text-white\\\" routerLink=\\\"/update-schedule\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-plus\\\"></i>xxx\\n                        </a>\\n                    </li>\\n\\n                </ul>\\n            </div>\\n        </nav>\\n        <br><br>\\n\\n\\n\\n        <div class=\\\"container text-center\\\">\\n            <br><br> <br><br><br><br>\\n            <h1 class=\\\"h2 \\\">Update schedule <i class=\\\"far fa-clipboard\\\"></i> </h1>\\n\\n            <br><br>\\n            <div class=\\\"row justify-content-center align-items-center\\\">\\n                <!-- Client\\n                    form -->\\n                <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"updateForm()\\\" novalidate>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label><b>Name:</b></label>\\n                            <input type=\\\"text\\\" formControlName=\\\"FirstName\\\" class=\\\"form-control\\\" required>\\n                            <p *ngIf=\\\"FirstName.touched && FirstName.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least first name</p>\\n                            <p *ngIf=\\\"FirstName.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label><b>Address:</b></label>\\n                            <input type=\\\"text\\\" formControlName=\\\"Address\\\" class=\\\"form-control\\\" required>\\n                            <p *ngIf=\\\"Address.touched && FirstName.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter a valid Address</p>\\n                            <p *ngIf=\\\"Address.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label><b>Date:</b></label>\\n\\n                            <input type=\\\"date\\\" formControlName=\\\"Date\\\" class=\\\"form-control text-center\\\" required>\\n                            <p *ngIf=\\\"Date.touched && Date.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter date</p>\\n                            <p *ngIf=\\\"Date.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Date shouldn't be less than 2 words</p>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label><b>Time:</b></label>\\n                            <input type=\\\"time\\\" formControlName=\\\"time\\\" class=\\\"form-control text-center\\\" required>\\n                            <p *ngIf=\\\"time.touched && time.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter time</p>\\n                            <p *ngIf=\\\"time.errors?.time\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label><b>Email:</b></label>\\n                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" required>\\n                            <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter email</p>\\n                            <p *ngIf=\\\"email.errors?.email\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\n                        </div>\\n\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label><b>Mobile:</b></label>\\n                            <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" required>\\n                            <p *ngIf=\\\"mobileNumber.touched && mobileNumber.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide contact number\\n                            </p>\\n                            <p *ngIf=\\\"mobileNumber.errors?.pattern\\\" class=\\\"error\\\"><sup>*</sup>Use numbers only number\\n                            </p>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12 mb-4\\\">\\n                            <label><b>Instructions:</b></label>\\n                            <textarea rows=\\\"2\\\" cols=\\\"20\\\" type=\\\"text\\\" formControlName=\\\"Instructions\\\" class=\\\"form-control\\\"></textarea>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group text-center\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger gap-right\\\" (click)=\\\"ResetForm()\\\">Reset</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.valid\\\">Update</button>\\n                    </div>\\n\\n                </form>\\n\\n            </div>\\n            <br><br><br>\\n            <div class=\\\" text-center\\\">\\n                <p class=\\\"custom-text\\\">A Company created for <strong>Detailed Residential and commercial cleaning</strong> Based in <strong>Montreal,Qc Canada</strong></p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"", "\nimport { AuthService } from '../../services/auth.service';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CrudService } from '../../services/crud.service';\nimport { ActivatedRoute, Router } from \"@angular/router\"; // ActivatedRoue is used to get the current associated components information.\nimport { Location } from '@angular/common';  // Location service is used to go back to previous component\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-admin-update-schedule',\n  templateUrl: './admin-update-schedule.component.html',\n  styleUrls: ['./admin-update-schedule.component.css']\n})\nexport class AdminUpdateScheduleComponent implements OnInit {\n  editForm: FormGroup;  // Define FormGrouupdate-schedule's edit form\n\n  constructor(\n\n    private crudApi: CrudService,       // Inject CRUD API in constructor\n    private fb: FormBuilder,            // Inject Form Builder service for Reactive forms\n    private location: Location,         // Location service to go back to previous component\n    private actRoute: ActivatedRoute,   // Activated route to get the current component's inforamation\n    private router: Router,             // Router service to navigate to specific component\n    private toastr: ToastrService,       // Toastr service for alert message\n    public authService: AuthService // Login\n  ) { }\n\n  public isAdmin: any = null;\n  public userUid: string = null;\n\n  ngOnInit() {\n\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n\n        this.getCurrentUser();\n        \n\n\n        this.updateScheduleData();   // Call updateStudentData() as soon as the component is ready \n        const id = this.actRoute.snapshot.paramMap.get('id');  // Getting current component's id or information using ActivatedRoute service\n        this.crudApi.getOneclient(id).subscribe(data => {\n          this.editForm.setValue(data)  // Using SetValue() method, It's a ReactiveForm's API to store intial value of reactive form \n        })\n      }\n\n      // Login\n      else {\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n        this.userUid = auth.uid;\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\n          // this.isAdmin = true;\n        })\n      }\n\n      else {\n        this.router.navigate(['home']);\n      }\n\n    })\n  }\n\n  get id() {\n    return this.editForm.get('id');\n  }\n  // Accessing form control using getters\n  get FirstName() {\n    return this.editForm.get('FirstName');\n  }\n\n  get Address() {\n    return this.editForm.get('Address');\n  }\n  get Date() {\n    return this.editForm.get('Date');\n  }\n  get email() {\n    return this.editForm.get('email');\n  }\n  get time() {\n    return this.editForm.get('time');\n  }\n\n  get mobileNumber() {\n    return this.editForm.get('mobileNumber');\n  }\n  get Instructions() {\n    return this.editForm.get('Instructions');\n  }\n\n  // Contains Reactive Form logic\n  updateScheduleData() {\n    this.editForm = this.fb.group({\n      id: [''],\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\n      Address: ['', [Validators.required, Validators.minLength(2)]],\n      Date: ['', [Validators.required, Validators.minLength(2)]],\n      time: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.minLength(4)]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      Instructions: ['']\n    })\n  }\n\n  // Go back to previous component\n  goBack() {\n    this.location.back();\n  }\n\n  // Below methods fire when somebody click on submit button\n  updateForm() {\n    this.crudApi.updateclient(this.editForm.value);       // Upupdate-schedule data using CRUD API\n    this.toastr.success(this.editForm.controls['FirstName'].value + ' updated successfully');   // Show succes message when data is successfully submited\n    this.router.navigate(['schedule-cleaning']);               // Navigatupdate-schedule's list page update-schedule data is updated\n  }\n  ResetForm() {\n    this.editForm.reset();\n  }\n}", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWxpc3QvYWRtaW4tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"", "module.exports = \"<div class=\\\"table-list container text-center\\\" style=\\\"margin-top:10%;padding-left:10%\\\" *ngIf=\\\" isAdmin==true;else noAdmin\\\">\\n    <div class=\\\"pricing-header mx-auto\\\">\\n\\n        <h1>Cleaning schedule <i class=\\\"far fa-clipboard\\\"></i> </h1>\\n\\n\\n\\n\\n        <table class=\\\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg table-hover\\\">\\n            <thead>\\n                <tr class=\\\"text-center\\\">\\n                    <th scope=\\\"col\\\">Client Id</th>\\n                    <th scope=\\\"col\\\">First name</th>\\n                    <th scope=\\\"col\\\">Address</th>\\n                    <th scope=\\\"col\\\">Date</th>\\n                    <th scope=\\\"col\\\">Time</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                    <th scope=\\\"col\\\">Mobile number</th>\\n                    <th scope=\\\"col\\\">Instructions</th>\\n                    <th class=\\\"text-center\\\" scope=\\\"col\\\">Edit</th>\\n                </tr>\\n            </thead>\\n\\n            <tbody class=\\\"text-center \\\">\\n                <!-- *ngFor loop iterates over Client list array and fetch the client's data -->\\n                <!-- paginate pipe will add pagination in client's list, it won't show if items are less then 7 -->\\n                <tr *ngFor=\\\"let profile of clients | paginate: { itemsPerPage: 7, currentPage: p }; let i = index;\\\">\\n                    <th scope=\\\"row\\\">{{profile.id}}</th>\\n                    <td>{{profile.FirstName}}</td>\\n                    <td>{{profile.Address}}</td>\\n                    <td>{{profile.Date}}</td>\\n                    <td>{{profile.time}}</td>\\n                    <td>{{profile.email}}</td>\\n                    <td>{{profile.mobileNumber}}</td>\\n                    <td>{{profile.Instructions}}</td>\\n                    <td class=\\\"text-center action-block\\\">\\n                        <!-- routerLink=\\\"/update-schedule/{{client.$key}}\\\" is refered to { path: 'update-schedule/:id', component: EditclientComponent } in app-routing.moudles.ts -->\\n                        <i class=\\\"far fa-edit\\\" routerLink=\\\"/admin-update-schedule/{{profile.id}}\\\"></i>\\n                        <i class=\\\"far fa-trash-alt\\\" (click)=\\\"onDeleteclient(profile)\\\"></i></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n\\n        <!-- Pagination -->\\n        <pagination-controls (pageChange)=\\\"p = $event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"></pagination-controls>\\n    </div>\\n</div>\\n\\n<!--*********************************************CLIENT SIDE********************************************************************************************************-->\"", "\n\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { UserInterface } from '../shared/user';\nimport { NgForm, FormGroup } from '@angular/forms';\nimport { CrudService } from '../services/crud.service';  // CRUD API service class\nimport { ClientCleanning } from '../shared/clientCleanning';   // client interface class for Data types.\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-list',\n  templateUrl: './admin-list.component.html',\n  styleUrls: ['./admin-list.component.css']\n})\nexport class AdminListComponent implements OnInit {\n  public clientForm: FormGroup;\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public crudApi: CrudService, // Inject client CRUD services in constructor.\n    public toastr: ToastrService // Toastr service for alert message\n  ) { }\n\n  public clients: ClientCleanning[];\n  public isAdmin: any = null;\n  public userUid: string = null;\n  public selectedClient: ClientCleanning;\n  public First: string;\n  public Email: string;\n  public Mobile: string;\n  public img: string;\n\n\n  ngOnInit() {\n\n\n    this.getListClients();\n    this.getCurrentUser();\n\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n        this.userUid = auth.uid;\n        this.Email = auth.email;\n\n        this.img = auth.photoURL;\n\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\n          // this.isAdmin = true;\n        })\n      }\n    })\n  }\n\n\n\n  getListClients() {\n    this.crudApi.getAllclients()\n      .subscribe(clients => {\n        this.clients = clients;\n      });\n    this.router.navigate(['admin-list'])\n  }\n\n  onDeleteclient(idClient: string): void {\n    const confirmacion = confirm('Are you sure?');\n    if (confirmacion) {\n      this.crudApi.deleteclient(idClient);\n    }\n  }\n\n  onPreUpdateclient(client: ClientCleanning) {\n    console.log('CLIENT', client);\n    this.crudApi.selectedClient = Object.assign({}, client);\n  }\n  ResetForm() {\n    this.clientForm.reset();\n  }\n  submitclientData() {\n    this.crudApi.addclient(this.clientForm.value); // Submit client data using CRUD API\n    this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); // Show success message when data is successfully submited\n    this.ResetForm();  // Reset form when clicked on reset button\n    this.router.navigate(['admin-list']);\n  };\n\n}\n", "\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  exports: [ RouterModule ],\n\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AppRoutingModule { }\n\n\n\n\n", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"", "module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n\\r\\n<router-outlet></router-outlet>\"", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n", "import { FormsModule} from '@angular/forms';\r\nimport { NotFoundPageComponent } from './componentes_/not-found-page/not-found-page.component';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AuthService } from './services/auth.service';\r\nimport { UserService } from './services/user.service';\r\nimport { AuthGuard } from './guards_/auth.guard';\r\nimport { LoginGuard } from './guards_/loginguard';\r\nimport { RouterModule,Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AddClientComponent } from './schedule-cleaning/schedule-cleaning.component';\r\nimport { UpdateScheduleComponent } from './update-schedule/update-schedule.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport{LoginComponent} from './componentes_/users/login/login.component';\r\nimport{RegisterComponent} from './componentes_/users/register/register.component'\r\nimport{AdminListComponent}from './admin-list/admin-list.component';\r\nimport { AdminUpdateScheduleComponent } from './ADMIN/admin-update-schedule/admin-update-schedule.component'\r\nimport{ProfileComponent} from './componentes_/users/profile/profile.component'\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { MyScheduleComponent } from './my-schedule/my-schedule.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  \r\n  { path: 'home', component: HomeComponent },\r\n  { path: '', component: HomeComponent },\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  { path: 'schedule-cleaning', component: AddClientComponent},\r\n  { path: 'my-schedule', component: MyScheduleComponent},\r\n  {path: 'profile', component: ProfileComponent },\r\n  { path: 'admin-list', component: AdminListComponent, canActivate:[AuthGuard]   },\r\n  { path: 'admin-update-schedule/:id', component: AdminUpdateScheduleComponent },\r\n\r\n  {path: '**', component: NotFoundPageComponent}\r\n];\r\n\r\n// Import RouterModule and inject routes array in it and dont forget to export the RouterModule\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddClientComponent,\r\n    UpdateScheduleComponent,\r\n    AdminListComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    NotFoundPageComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    AdminUpdateScheduleComponent,\r\n    ProfileComponent,\r\n    NavBarComponent,\r\n    MyScheduleComponent,\r\n\r\n    \r\n    \r\n  ],\r\n  imports: [RouterModule,CommonModule,RouterModule,\r\n            RouterModule.forRoot(routes),\r\n            BrowserModule,CommonModule,\r\n            AngularFireModule.initializeApp(environment.firebase), // Main Angular fire module \r\n            AngularFireDatabaseModule,  // Firebase database module \r\n            ReactiveFormsModule,        // Reactive forms module\r\n            AppRoutingModule,           // Main routing module\r\n            BrowserAnimationsModule,    // Required animations module for Toastr\r\n            FormsModule,AngularFireStorageModule,\r\n\r\n       AngularFireAuthModule,     \r\n       ToastrModule.forRoot({\r\n       timeOut: 3000,\r\n       positionClass: 'toast-bottom-right',\r\n       preventDuplicates: true,      \r\n    }),\r\n\r\n    NgxPaginationModule  // NGX pagination module\r\n    \r\n  ],\r\n  providers: [AuthService,UserService, AuthGuard,AngularFireAuth,AngularFirestore],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n", "module.exports = \"<div class=\\\"container-fluid mt-6\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto text-center\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <h1>Oops!</h1>\\r\\n            <h2>Someone needs to go now!</h2>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <img src=\\\"assets/404.gif\\\" class=\\\"preloader-icon\\\" alt=\\\"assets/preloader.gif\\\">\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-primary btn-lg\\\"><i class=\\\"fa fa-home\\\"></i> Back home</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzXy9ub3QtZm91bmQtcGFnZS9ub3QtZm91bmQtcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\"", "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.scss']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n", "module.exports = \".form-control.login-user {\\r\\n  border: 0 solid #fff !important;\\r\\n}\\r\\n.btn-social{\\r\\n  position: relative;\\r\\n  text-align: center;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  color: #fff;\\r\\n  border-color: rgba(0,0,0,0.2);\\r\\n}\\r\\n.btn-facebook{\\r\\n  background: #3b5998;\\r\\n}\\r\\n.btn-google{\\r\\n  background: #dd4b39;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50ZXNfL3VzZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQ0FBZ0M7Q0FDakM7QUFDRDtFQUNFLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGlCQUFpQjtFQUNqQix3QkFBd0I7RUFDeEIsWUFBWTtFQUNaLDhCQUE4QjtDQUMvQjtBQUVEO0VBQ0Usb0JBQW9CO0NBQ3JCO0FBQ0Q7RUFDRSxvQkFBb0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRlc18vdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRyb2wubG9naW4tdXNlciB7XHJcbiAgYm9yZGVyOiAwIHNvbGlkICNmZmYgIWltcG9ydGFudDtcclxufVxyXG4uYnRuLXNvY2lhbHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICBjb2xvcjogI2ZmZjtcclxuICBib3JkZXItY29sb3I6IHJnYmEoMCwwLDAsMC4yKTtcclxufVxyXG5cclxuLmJ0bi1mYWNlYm9va3tcclxuICBiYWNrZ3JvdW5kOiAjM2I1OTk4O1xyXG59XHJcbi5idG4tZ29vZ2xle1xyXG4gIGJhY2tncm91bmQ6ICNkZDRiMzk7XHJcbn1cclxuIl19 */\"", "module.exports = \"<section id=\\\"login\\\" class=\\\"mb-5 mt-5\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <br><br><br>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 mx-auto\\\">\\r\\n                <div class=\\\"card_login\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body text-center\\\">\\r\\n                            <form #formLogin=\\\"ngForm\\\" (submit)=\\\"onLogin()\\\">\\r\\n                                <h1 class=\\\"h3 mb-3 font-weight-normal\\\" *ngIf=\\\"!isError\\\">Login</h1>\\r\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                                    Something is wrong!\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input [(ngModel)]=\\\"email\\\" type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" required>\\r\\n                                    <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter an email Address</p>\\r\\n                                    <p *ngIf=\\\"email.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup> Email shouldn't be less than 2 words</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n                                </div>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\">Login</button>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <a routerLink=\\\"/register\\\" class=\\\"form-control login-user\\\">Are you new ?</a>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <button class=\\\"btn btn-block btn-social btn-facebook\\\" (click)=\\\"onLoginFacebook()\\\">\\r\\n                    <span class=\\\"fab fa-facebook\\\"></span>\\r\\n                    FACEBOOK\\r\\n                  </button>\\r\\n                                    <button class=\\\"btn btn-block btn-social btn-google\\\" (click)=\\\"onLoginGoogle()\\\">\\r\\n                    <span class=\\\"fab fa-google\\\"></span>\\r\\n                    GOOGLE\\r\\n                  </button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"", "import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router} from '@angular/router';\r\nimport { AuthService} from '../../../services/auth.service';\r\nimport {  FormGroup,Validators,FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public clientForm: FormGroup;\r\n  constructor(public afAuth: AngularFireAuth, private router: Router, private authService: AuthService) { }\r\n  public email: string = '';\r\n  public password: string = '';\r\n  public fb: FormBuilder;\r\n  ngOnInit() {\r\n  }\r\n  clientsForm() {\r\n    this.clientForm = this.fb.group({\r\n    \r\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n     \r\n    })  \r\n  }\r\n\r\n  onLogin(): void {\r\n    this.authService.loginEmailUser(this.email, this.password)\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n\r\n  onLoginGoogle(): void {\r\n    this.authService.loginGoogleUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n  onLoginFacebook(): void {\r\n    this.authService.loginFacebookUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n\r\n  onLoginRedirect(): void {\r\n    this.router.navigate(['home']);\r\n  }\r\n}\r\n", "module.exports = \".main-section {\\r\\n  border: 1px solid #007bff;\\r\\n  background: #fff;\\r\\n}\\r\\n.profile-header {\\r\\n  background: #007bff;\\r\\n  height: 150px;\\r\\n}\\r\\n.user-detail {\\r\\n  margin: -50px 0 30px 0;\\r\\n}\\r\\nimg {\\r\\n  height: 100px;\\r\\n  width: 100px;\\r\\n}\\r\\n.user-details h5 {\\r\\n  margin: 15px 0 5px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50ZXNfL3VzZXJzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQTBCO0VBQzFCLGlCQUFpQjtDQUNsQjtBQUNEO0VBQ0Usb0JBQW9CO0VBQ3BCLGNBQWM7Q0FDZjtBQUNEO0VBQ0UsdUJBQXVCO0NBQ3hCO0FBRUQ7RUFDRSxjQUFjO0VBQ2QsYUFBYTtDQUNkO0FBQ0Q7RUFDRSxxQkFBcUI7Q0FDdEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRlc18vdXNlcnMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1zZWN0aW9uIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMDA3YmZmO1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbn1cclxuLnByb2ZpbGUtaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kOiAjMDA3YmZmO1xyXG4gIGhlaWdodDogMTUwcHg7XHJcbn1cclxuLnVzZXItZGV0YWlsIHtcclxuICBtYXJnaW46IC01MHB4IDAgMzBweCAwO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG59XHJcbi51c2VyLWRldGFpbHMgaDUge1xyXG4gIG1hcmdpbjogMTVweCAwIDVweCAwO1xyXG59Il19 */\"", "module.exports = \"<div class=\\\"jumbotron mt-3\\\">\\r\\n    <section id=\\\"profile\\\" class=\\\"container\\\">\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n            <div class=\\\"offset-lg-4 col-lg-4 col-sm-6 col-12 main-section text-center card\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-12 col-sm-12 col-12 \\\">\\r\\n                        <br>\\r\\n                        <h1>My schedule <i class=\\\"far fa-clipboard \\\"></i></h1>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row user-details\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail w-25 \\\" alt=\\\"profile \\\">\\r\\n                        <h5 *ngIf=\\\"providerId != 'password'\\\"> {{Email}}</h5>\\r\\n                        <p>\\r\\n\\r\\n                        </p>\\r\\n\\r\\n                        <hr>\\r\\n\\r\\n\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <br>\\r\\n                            <div class=\\\"card-title\\\">\\r\\n\\r\\n                                <h4>Set Cleaning task</h4>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <span>Hit <u><b>Create</b></u> to set date&time, Address and instructions for cleaning you place,\\r\\n                                         and hit <u><b>My orders</b></u> to check, update or delete the task</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-footer\\\">\\r\\n                                <p>\\r\\n                                    <a href=\\\"https://www.facebook.com/Sunny-Hostals-261669591256712/\\\"><i class=\\\"fab fa-facebook-f\\\"></i></a>\\r\\n\\r\\n                                    <a href=\\\"https://www.instagram.com/misael_jr76/\\\"><i class=\\\"fab fa-instagram\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                                </a>\\r\\n                                    <a href=\\\"https://twitter.com/Sunnyhostals1\\\"><i class=\\\"fab fa-twitter\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                                </a>\\r\\n                                </p>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <br>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </section>\\r\\n</div>\"", "\r\n\r\n  import { Component, OnInit } from '@angular/core';\r\n  import { AuthService } from '../../../services/auth.service';\r\n  import { AngularFireAuth } from '@angular/fire/auth';\r\n  import { UserInterface } from '../../../shared/user';\r\n  import { NgForm, FormGroup } from '@angular/forms';\r\n  import { CrudService } from '../../../services/crud.service';  // CRUD API service class\r\n  import { ClientCleanning } from '../../../shared/clientCleanning';   // client interface class for Data types.\r\n  import { ToastrService } from 'ngx-toastr';\r\n  import { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n\r\n\r\n\r\n    public clientForm: FormGroup;\r\n    constructor(\r\n      private authService: AuthService,\r\n      private router: Router,\r\n      public crudApi: CrudService, // Inject client CRUD services in constructor.\r\n      public toastr: ToastrService // Toastr service for alert message\r\n    ) { }\r\n  \r\n    public clients: ClientCleanning[];\r\n    public isAdmin: any = null;\r\n    public userUid: string = null;\r\n    public selectedClient: ClientCleanning;\r\n    public First: string;\r\n    public Email: string;\r\n    public Mobile: string;\r\n    public img: string;\r\n  \r\n  \r\n    ngOnInit() {\r\n  \r\n  \r\n      this.getListClients();\r\n      this.getCurrentUser();\r\n  \r\n    }\r\n  \r\n    getCurrentUser() {\r\n      this.authService.isAuth().subscribe(auth => {\r\n        if (auth) {\r\n          this.userUid = auth.uid;\r\n          this.Email = auth.email;\r\n  \r\n          this.img = auth.photoURL;\r\n  \r\n          this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\r\n            this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\r\n            // this.isAdmin = true;\r\n          })\r\n        }\r\n      })\r\n    }\r\n  \r\n  \r\n  \r\n    getListClients() {\r\n      this.crudApi.getAllclients()\r\n        .subscribe(clients => {\r\n          this.clients = clients;\r\n        });\r\n      this.router.navigate(['profile'])\r\n    }\r\n  \r\n    onDeleteclient(idClient: string): void {\r\n      const confirmacion = confirm('Are you sure?');\r\n      if (confirmacion) {\r\n        this.crudApi.deleteclient(idClient);\r\n      }\r\n    }\r\n  \r\n    onPreUpdateclient(client: ClientCleanning) {\r\n      console.log('CLIENT', client);\r\n      this.crudApi.selectedClient = Object.assign({}, client);\r\n    }\r\n    ResetForm() {\r\n      this.clientForm.reset();\r\n    }\r\n    submitclientData() {\r\n      this.crudApi.addclient(this.clientForm.value); // Submit client data using CRUD API\r\n      this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); // Show success message when data is successfully submited\r\n      this.ResetForm();  // Reset form when clicked on reset button\r\n      this.router.navigate(['admin-list']);\r\n    };\r\n  \r\n  }\r\n  ", "module.exports = \".form-control.login-user {\\r\\n  border: 0px solid #fff !important;\\r\\n}\\r\\n.btn-social{\\r\\n  position: relative;\\r\\n  text-align: center;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  color: #fff;\\r\\n  border-color: rgba(0,0,0,0.2);\\r\\n}\\r\\n.btn-facebook{\\r\\n  background: #3b5998;\\r\\n}\\r\\n.btn-google{\\r\\n  background: #dd4b39;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50ZXNfL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQ0FBa0M7Q0FDbkM7QUFDRDtFQUNFLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGlCQUFpQjtFQUNqQix3QkFBd0I7RUFDeEIsWUFBWTtFQUNaLDhCQUE4QjtDQUMvQjtBQUVEO0VBQ0Usb0JBQW9CO0NBQ3JCO0FBQ0Q7RUFDRSxvQkFBb0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRlc18vdXNlcnMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRyb2wubG9naW4tdXNlciB7XHJcbiAgYm9yZGVyOiAwcHggc29saWQgI2ZmZiAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4tc29jaWFse1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLDAsMCwwLjIpO1xyXG59XHJcblxyXG4uYnRuLWZhY2Vib29re1xyXG4gIGJhY2tncm91bmQ6ICMzYjU5OTg7XHJcbn1cclxuLmJ0bi1nb29nbGV7XHJcbiAgYmFja2dyb3VuZDogI2RkNGIzOTtcclxufSJdfQ== */\"", "module.exports = \"<section id=\\\"register\\\" class=\\\"mb-5 mt-5\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <br><br><br>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 mx-auto\\\">\\r\\n                <div class=\\\"card_register\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body text-center\\\">\\r\\n                            <form #formRegister=\\\"ngForm\\\" (ngSubmit)=\\\"onAddUser()\\\">\\r\\n                                <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Register</h1>\\r\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\">\\r\\n                                    <h3>it's been an error!</h3>>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required minlength=\\\"8\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"email.touched && !email.valid\\\">\\r\\n                                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\r\\n                                    <div *ngIf=\\\"email.errors.minlength\\\">Email must be at least 8 characters</div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" required minlength=\\\"5\\\" maxlength=\\\"10\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"password.touched && !password.valid\\\">\\r\\n                                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\r\\n                                    <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 5 characters</div>\\r\\n                                </div>\\r\\n                                <hr>\\r\\n                                <div class=\\\"form-group text-center\\\">\\r\\n                                    <h5>Select image:</h5>\\r\\n                                    <input class=\\\"bg-light\\\" type=\\\"file\\\" (change)=\\\"onUpload($event)\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"progress\\\">\\r\\n                                    <div [style.visibility]=\\\"(uploadPercent == 0) ? 'hidden' : 'visible'\\\" class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width]=\\\"(uploadPercent | async) +'%'\\\">\\r\\n\\r\\n                                        <!-- <span class=\\\"progressText\\\" *ngIf=\\\"urlImage | async\\\">\\r\\n                      Ok!!</span> -->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <input #imageUser type=\\\"hidden\\\" [value]=\\\"urlImage | async\\\">\\r\\n                                <button *ngIf=\\\"urlImage | async; else btnDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\">Register</button>\\r\\n                                <ng-template #btnDisabled>\\r\\n                                    <button type=\\\"submit\\\" disabled=true class=\\\"btn btn-lg btn-warning btn-block\\\">Register</button>\\r\\n                                </ng-template>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <a routerLink=\\\"/login\\\" class=\\\"form-control login-user\\\">Do you have account?</a>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <button class=\\\"btn btn-block btn-social btn-facebook\\\" (click)=\\\"onLoginFacebook()\\\">\\r\\n                    <span class=\\\"fab fa-facebook-f\\\"></span> \\r\\n                    FACEBOOK\\r\\n                  </button>\\r\\n                                    <button class=\\\"btn btn-block btn-social btn-google\\\" (click)=\\\"onLoginGoogle()\\\">\\r\\n                    <span class=\\\"fab fa-goodreads-g\\\"></span>\\r\\n                    GOOGLE\\r\\n                  </button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"", "import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private authService: AuthService, private storage: AngularFireStorage) { }\r\n  @ViewChild('imageUser') inputImageUser: ElementRef;\r\n\r\n  public email: string = '';\r\n  public password: string = '';\r\n\r\n  uploadPercent: Observable<number>;\r\n  urlImage: Observable<string>;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onUpload(e) {\r\n    // console.log('subir', e.target.files[0]);\r\n    const id = Math.random().toString(36).substring(2);\r\n    const file = e.target.files[0];\r\n    const filePath = `uploads/profile_${id}`;\r\n    const ref = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n    this.uploadPercent = task.percentageChanges();\r\n    task.snapshotChanges().pipe(finalize(() => this.urlImage = ref.getDownloadURL())).subscribe();\r\n  }\r\n  onAddUser() {\r\n    this.authService.registerUser(this.email, this.password)\r\n      .then((res) => {\r\n        this.authService.isAuth().subscribe(user => {\r\n          if (user) {\r\n            user.updateProfile({\r\n              displayName: '',\r\n              photoURL: this.inputImageUser.nativeElement.value\r\n            }).then(() => {\r\n              this.router.navigate(['']);\r\n            }).catch((error) => console.log('error', error));\r\n          }\r\n        });\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n  onLoginGoogle(): void {\r\n    this.authService.loginGoogleUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n  onLoginFacebook(): void {\r\n    this.authService.loginFacebookUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n\r\n  onLoginRedirect(): void {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { take, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private afsAuth: AngularFireAuth, private router: Router) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    return this.afsAuth.authState\r\n      .pipe(take(1))\r\n      .pipe(map(authState => !!authState))\r\n      .pipe(tap(auth => {\r\n        if (!auth) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }));\r\n  }\r\n}\r\n", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"", "module.exports = \"<!-- Main content -->\\n<div class=\\\"container float-right \\\"><br><br><br><br><br>\\n    <div class=\\\"card center-align\\\">\\n\\n        <div class=\\\"card-title text-center\\\">\\n            <br>\\n            <h1> Schedule your cleaning services</h1>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n            <!-- Use router template to show the components for which router service is activated -->\\n\\n\\n            <img class=\\\"img-responsive float-center\\\" style=\\\"width:100%\\\" src=\\\"/assets/limpiezaa.jpg\\\">\\n\\n            <!-- Footer -->\\n            <div class=\\\"card-footer  text-center\\\">\\n\\n\\n                <p>This company provides cleaning services by using\\n                    <a href=\\\"https://Aqui va el app/\\\" title=\\\"Learn Free Full Stack Software Development\\\">\\n           Netto App<br>\\n          </a> a cleaning services App available in the\\n                    <a href=\\\"\\\" title=\\\"Learn Free Full Stack Software Development\\\">\\n           APP STORE\\n          </a><br></p>\\n                <a href=\\\"https://www.facebook.com/Sunny-Hostals-261669591256712/\\\"><i class=\\\"fab fa-facebook-f\\\"></i></a>\\n\\n                <a href=\\\"https://www.instagram.com/misael_jr76/\\\"><i class=\\\"fab fa-instagram\\\" aria-hidden=\\\"true\\\"></i>\\n                      </a>\\n                <a href=\\\"https://twitter.com/Sunnyhostals1\\\"><i class=\\\"fab fa-twitter\\\" aria-hidden=\\\"true\\\"></i>\\n                      </a>\\n            </div>\\n        </div>\\n    </div>\"", "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  \n\n  constructor(\n \n    public router: Router,\n\n  ) { }\n\n  ngOnInit(){}\n}\n\n\n", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXNjaGVkdWxlL215LXNjaGVkdWxlLmNvbXBvbmVudC5jc3MifQ== */\"", "module.exports = \"<div class=\\\"table-list container text-center\\\" style=\\\"margin-top:10%;padding-left:10%\\\">\\n    <div class=\\\"pricing-header mx-auto\\\">\\n        <div class=\\\"row user-details\\\">\\n            <div class=\\\"col-12\\\">\\n                <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:6%\\\" alt=\\\"profile \\\">\\n                <h5 *ngIf=\\\"providerId != 'password'\\\"> {{Email}}</h5>\\n            </div>\\n        </div>\\n        <h1>Cleaning schedule <i class=\\\"far fa-clipboard\\\"></i> </h1>\\n\\n\\n\\n\\n        <table class=\\\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg table-hover\\\">\\n            <thead>\\n                <tr class=\\\"text-center\\\">\\n                    <th scope=\\\"col\\\">Client Id</th>\\n                    <th scope=\\\"col\\\">First name</th>\\n                    <th scope=\\\"col\\\">Address</th>\\n                    <th scope=\\\"col\\\">Date</th>\\n                    <th scope=\\\"col\\\">Time</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                    <th scope=\\\"col\\\">Mobile number</th>\\n                    <th scope=\\\"col\\\">Instructions</th>\\n                    <th class=\\\"text-center\\\" scope=\\\"col\\\">Edit</th>\\n                </tr>\\n            </thead>\\n\\n            <tbody class=\\\"text-center \\\" *ngFor=\\\"let profile of clients \\\">\\n                <!-- *ngFor loop iterates over Client list array and fetch the client's data -->\\n                <!-- paginate pipe will add pagination in client's list, it won't show if items are less then 7 -->\\n                <tr>\\n                    <th scope=\\\"row\\\">{{profile.id}}</th>\\n                    <td>{{profile.FirstName}}</td>\\n                    <td>{{profile.Address}}</td>\\n                    <td>{{profile.Date}}</td>\\n                    <td>{{profile.time}}</td>\\n                    <td>{{profile.email}}</td>\\n                    <td>{{profile.mobileNumber}}</td>\\n                    <td>{{profile.Instructions}}</td>\\n                    <td class=\\\"text-center action-block\\\">\\n                        <!-- routerLink=\\\"/update-schedule/{{client.$key}}\\\" is refered to { path: 'update-schedule/:id', component: EditclientComponent } in app-routing.moudles.ts -->\\n                        <i class=\\\"far fa-edit\\\" routerLink=\\\"/admin-update-schedule/{{profile.id}}\\\"></i>\\n                        <i class=\\\"far fa-trash-alt\\\" (click)=\\\"onDeleteclient(profile)\\\"></i></td>\\n                    <td *ngIf=\\\"profile.userUid == userUid || isAdmin == true; else noOwner\\\"></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n\\n        <!-- Pagination -->\\n        <pagination-controls (pageChange)=\\\"p = $event\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"></pagination-controls>\\n    </div>\\n</div>\"", "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { UserInterface } from '../shared/user';\n\n\nimport { ClientCleanning } from '../shared/clientCleanning';   // client interface class for Data types.\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\nimport { CrudService } from '../services/crud.service';    // CRUD services API\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'; // Reactive form services\n\n\n\n\n@Component({\n  selector: 'app-my-schedule',\n  templateUrl: './my-schedule.component.html',\n  styleUrls: ['./my-schedule.component.css']\n})\nexport class MyScheduleComponent implements OnInit {\n  public clientForm: FormGroup; \n    constructor(\n      public authService: AuthService,\n      private router:Router,\n      public crudApi: CrudService,  // CRUD API services\n      public fb: FormBuilder,       // Form Builder service for Reactive forms\n      public toastr: ToastrService // Toastr service for alert message\n    ) { }\n  \n    public clients: ClientCleanning[];\n    public isAdmin: any = null;\n    public userUid: string = null;\n    public selectedClient: ClientCleanning;\n    public First: string;\n    public Email: string;\n    public Mobile: string;\n    public img: string;\n  \n  \n    ngOnInit() {\n  \n      this.clientsForm(); \n      this.getListClients();\n      this.getCurrentUser();\n  \n    }\n  \n    getCurrentUser() {\n      this.authService.isAuth().subscribe(auth => {\n        if (auth) {\n          this.userUid = auth.uid;\n          this.Email = auth.email;\n  \n          this.img = auth.photoURL;\n  \n          this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\n            this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\n            // this.isAdmin = true;\n          })\n        }\n      })\n    }\n  \n   // Reactive client form\n   clientsForm() {\n    this.clientForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\n      Address: ['' ,[Validators.required, Validators.minLength(6)]],\n      Date:['' ,[Validators.required]] ,\n      time:['' ,[Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      Instructions:['', [Validators.required, Validators.minLength(10)]],\n    })  \n  }\n\n  \n    getListClients() {\n      this.crudApi.getAllclients()\n        .subscribe(clients => {\n          this.clients = clients;\n        });\n      this.router.navigate(['my-schedule'])\n    }\n  \n    onDeleteclient(idClient: string): void {\n      const confirmacion = confirm('Are you sure?');\n      if (confirmacion) {\n        this.crudApi.deleteclient(idClient);\n      }\n    }\n  \n    onPreUpdateclient(client: ClientCleanning) {\n      console.log('CLIENT', client);\n      this.crudApi.selectedClient = Object.assign({}, client);\n    }\n    ResetForm() {\n      this.clientForm.reset();\n    }\n    submitclientData() {\n      this.crudApi.addclient(this.clientForm.value); // Submit client data using CRUD API\n      this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); // Show success message when data is successfully submited\n      this.ResetForm();  // Reset form when clicked on reset button\n      this.router.navigate(['admin-list']);\n    };\n  \n  }\n  ", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi1iYXIvbmF2LWJhci5jb21wb25lbnQuY3NzIn0= */\"", "module.exports = \"<!-- Top navigation -->\\n<nav class=\\\"navbar  navbar-dark fixed-top bg-dark flex-md-nowrap pt-0 pb-0 shadow\\\">\\n    <a class=\\\"navbar-brand col-sm col-md-0 mr-0\\\" routerLink=\\\"\\\">\\n        <img class=\\\"user-image\\\" src=\\\"/assets/Netto.png\\\"> Netto\\n    </a>\\n\\n    <a class=\\\"nav-item\\\" style=\\\"padding-right: .90rem\\\" routerLink=\\\"/login\\\" *ngIf=\\\"!isLogin\\\">\\n        <span class=\\\"text-white\\\">Login</span>\\n    </a>\\n\\n    <a class=\\\"nav-item \\\" routerLink=\\\"/register\\\" *ngIf=\\\"!isLogin\\\">\\n        <span class=\\\"text-white\\\">Register</span>\\n    </a>\\n\\n\\n\\n    <a class=\\\"nav-item\\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"isLogin\\\">\\n        <a class=\\\"text-white\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </a>\\n\\n</nav>\\n\\n<!-- Sidebar navigation -->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row \\\">\\n        <nav style=\\\"background-color:black \\\" class=\\\"col-md-2 d-md-block sidebar text-white border-2 \\\">\\n            <div class=\\\"sidebar-sticky border-2 \\\">\\n                <ul class=\\\"nav flex-column \\\">\\n\\n\\n                    <br>\\n\\n                    <li class=\\\"nav-item \\\" *ngIf=\\\"isAdmin\\\">\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/admin-list\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-tools \\\"></i>Admin panel\\n                        </a>\\n                    </li>\\n                    <br>\\n\\n                    <div class=\\\"dropdown-divider \\\"></div>\\n                    <li class=\\\"nav-item \\\" *ngIf=\\\"isLogin \\\">\\n\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-home \\\"></i>My Profile\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item \\\" *ngIf=\\\"isLogin \\\">\\n\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/my-schedule\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-home \\\"></i>MyOrders\\n                        </a>\\n                    </li>\\n\\n\\n                    <li class=\\\"nav-item \\\" *ngIf=\\\"isLogin \\\">\\n\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/schedule-cleaning\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-home \\\"></i>Create task\\n                        </a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item \\\" *ngIf=\\\"isLogin \\\">\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/schedule-cleaning\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-home \\\"></i>Residential cleaning\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item \\\">\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-building \\\"></i>Comercial cleanning\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item \\\">\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-paint-roller\\\"></i> Painting\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item \\\">\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fas fa-snowplow\\\"></i> Snow removal\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item \\\">\\n                        <a class=\\\"nav-link text-white \\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n                            <i class=\\\"fab fa-pagelines\\\"></i> Garden\\n                        </a>\\n                    </li>\\n\\n                </ul>\\n            </div>\\n        </nav>\\n    </div>\"", "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n\nimport { CrudService } from '../services/crud.service';    // CRUD services API\nimport {  Validators,FormGroup,FormBuilder} from '@angular/forms'; // Reactive form services\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  public clientForm: FormGroup; \n  public isLogin: boolean;\n  public nombreUsuario: string;\n  public emailUsuario: string;\n\n\n  constructor(\n  \n    public authService: AuthService,\n    private router:Router,\n    public crudApi: CrudService,  // CRUD API services\n    public fb: FormBuilder,       // Form Builder service for Reactive forms\n    public toastr: ToastrService  // Toastr service for alert message\n\n  ) { }\n\n  public noAdmin: any = null;\n  public isAdmin: any = null;\n  public userUid: string = null;\n\n  ngOnInit() {\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n        this.isLogin = true;\n        this.nombreUsuario = auth.displayName;\n        this.emailUsuario = auth.email;\n\n        this.userUid = auth.uid;\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\n          // this.isAdmin = true;\n\n        })\n      }\n      else {\n        this.isLogin = false;\n        this.isAdmin = false;\n      }\n    });\n  }\n  clientsForm() {\n    this.clientForm = this.fb.group({\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\n      Address: ['' ,[Validators.required, Validators.minLength(2)]],\n      Date:['' ,[Validators.required, Validators.minLength(2)]],\n      time:['' ,[Validators.required]],\n      email: ['', [Validators.required, Validators.minLength(4)]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      Instructions:['']\n    })  \n  }\n    // Reset client form's values\n    ResetForm() {\n      this.clientForm.reset();\n    }  \n   \n    submitclientData() {\n      this.crudApi.addclient(this.clientForm.value); // Submit client data using CRUD API\n      this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); // Show success message when data is successfully submited\n      this.ResetForm();  // Reset form when clicked on reset button\n      this.router.navigate(['admin-list']);  \n     };\n     \n\n  logout() {\n    this.authService.logoutUser();\n    this.router.navigate(['home']);\n  }\n}", "module.exports = \"<div class=\\\"container text-center\\\">\\r\\n\\r\\n\\r\\n    <br><br><br>\\r\\n    <br>\\r\\n    <div class=\\\"row user-details\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:6%\\\" alt=\\\"profile \\\">\\r\\n            <h5 *ngIf=\\\"providerId != 'password'\\\"> {{Email}}</h5>\\r\\n        </div>\\r\\n    </div>\\r\\n    <h1 class=\\\"h2 \\\">Schedule <i class=\\\"far fa-clipboard\\\"></i> </h1>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n\\r\\n        <!-- Student form -->\\r\\n        <form [formGroup]=\\\"clientForm\\\" (ngSubmit)=\\\"submitclientData()\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Name:</b></label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"FirstName\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"FirstName.touched && FirstName.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least first name</p>\\r\\n                    <p *ngIf=\\\"FirstName.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Address:</b></label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"Address\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"Address.touched && Address.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least Address</p>\\r\\n                    <p *ngIf=\\\"Address.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Address shouldn't be less than 6 words</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Date:</b></label>\\r\\n\\r\\n                    <input type=\\\"date\\\" formControlName=\\\"Date\\\" class=\\\"form-control text-center\\\" required>\\r\\n                    <p *ngIf=\\\"Date.touched && Date.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter a correct date</p>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Time:</b></label>\\r\\n                    <input type=\\\"time\\\" formControlName=\\\"time\\\" class=\\\"form-control text-center\\\" required>\\r\\n                    <p *ngIf=\\\"time.touched && time.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please set the time</p>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>email:</b></label>\\r\\n                    <input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"name@email.com\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter an email Address</p>\\r\\n                    <p *ngIf=\\\"email.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup> Email shouldn't be less than 2 words</p>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Mobile:</b></label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"mobileNumber.touched && mobileNumber.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide contact number\\r\\n                    </p>\\r\\n                    <p *ngIf=\\\"mobileNumber.errors?.pattern\\\" class=\\\"error\\\"><sup>*</sup>Use numbers only number\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 mb-4\\\">\\r\\n                    <label><b>Instructions:</b></label>\\r\\n                    <textarea rows=\\\"2\\\" cols=\\\"20\\\" type=\\\"text\\\" formControlName=\\\"Instructions\\\" class=\\\"form-control\\\"></textarea>\\r\\n                    <p *ngIf=\\\"Instructions.touched && Instructions.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide the instructions</p>\\r\\n                    <p *ngIf=\\\"Instructions.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Instructions shouldn't be less than 10 words</p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group text-center\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger gap-right\\\" (click)=\\\"ResetForm()\\\">Reset</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!clientForm.valid\\\">Create </button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n    <br><br>\\r\\n    <div class=\\\" text-center\\\">\\r\\n        <p class=\\\"custom-text\\\">A Company created for <strong>Detailed Residential and commercial cleaning</strong> Based in <strong>Montreal,Qc Canada</strong></p>\\r\\n    </div>\\r\\n</div>\\r\\n<!--        <select id=\\\"destination\\\" name=\\\"province\\\">\\r\\n\\r\\n\\r\\n    <option value=\\\"Villa Clara/Remedios\\\">Villa Clara/Remedios\\r\\n        <option value=\\\"Villa Clara/Santa clara\\\">Villa Clara/Santa clara\\r\\n            <option value=\\\"Villa Clara/Caibarien\\\">Villa Clara/Caibarien\\r\\n                <option value=\\\"Cienfuegos/City\\\">Cienfuegos/City\\r\\n                    <option value=\\\"Cienfuegos/Trinidad\\\">Cienfuegos/Trinidad\\r\\n                        <option value=\\\"Havana/City\\\">Havana/City\\r\\n\\r\\n</select>-->\"", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlLWNsZWFuaW5nL3NjaGVkdWxlLWNsZWFuaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"", "import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from '../services/crud.service';    // CRUD services API\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'; // Reactive form services\r\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ClientCleanning } from '../shared/clientCleanning';\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './schedule-cleaning.component.html',\r\n  styleUrls: ['./schedule-cleaning.component.scss']\r\n})\r\n\r\nexport class AddClientComponent implements OnInit {\r\n  public clientForm: FormGroup;  // Define FormGroup to client's form\r\n \r\n  constructor(\r\n    public authService: AuthService,\r\n    private router:Router,\r\n    public crudApi: CrudService,  // CRUD API services\r\n    public fb: FormBuilder,       // Form Builder service for Reactive forms\r\n    public toastr: ToastrService  // Toastr service for alert message\r\n  ) { }\r\n  public clients: ClientCleanning[];\r\n  public isAdmin: any = null;\r\n  public userUid: string = null;\r\n  public selectedClient: ClientCleanning;\r\n  public First: string;\r\n  public Email: string;\r\n  public Mobile: string;\r\n  public img: string;\r\n \r\n  ngOnInit() {\r\n    this.crudApi.getAllclients();  // Call GetclientsList() before main form is being called\r\n    this.clientsForm(); \r\n    \r\n    this.getCurrentUser();             // Call client form when component is ready\r\n  }\r\n  getCurrentUser() {\r\n    this.authService.isAuth().subscribe(auth => {\r\n      if (auth) {\r\n        this.userUid = auth.uid;\r\n        this.Email = auth.email;\r\n\r\n        this.img = auth.photoURL;\r\n\r\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\r\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\r\n          // this.isAdmin = true;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Reactive client form\r\n  clientsForm() {\r\n    this.clientForm = this.fb.group({\r\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      Address: ['' ,[Validators.required, Validators.minLength(6)]],\r\n      Date:['' ,[Validators.required]] ,\r\n      time:['' ,[Validators.required]],\r\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\r\n      Instructions:['', [Validators.required, Validators.minLength(10)]],\r\n    })  \r\n  }\r\n\r\n  // Accessing form control using getters\r\n  get FirstName() {\r\n    return this.clientForm.get('FirstName');\r\n  }\r\n  \r\n\r\n  get Address() {\r\n    return this.clientForm.get('Address');\r\n  }  \r\n  get Date() {\r\n    return this.clientForm.get('Date');\r\n  }\r\n\r\n  get time() {\r\n    return this.clientForm.get('time');\r\n  }\r\n  get email() {\r\n    return this.clientForm.get('email');\r\n  }\r\n\r\n  get mobileNumber() {\r\n    return this.clientForm.get('mobileNumber');\r\n  }\r\n  get Instructions() {\r\n    return this.clientForm.get('Instructions');\r\n  }\r\n\r\n  // Reset client form's values\r\n  ResetForm() {\r\n    this.clientForm.reset();\r\n  }  \r\n \r\n  submitclientData() {\r\n    this.crudApi.addclient(this.clientForm.value); // Submit client data using CRUD API\r\n    this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); // Show success message when data is successfully submited\r\n    this.ResetForm();  // Reset form when clicked on reset button\r\n    this.router.navigate(['profile']);  \r\n   };\r\n   \r\n \r\n}", "import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Injectable } from '@angular/core';\r\nimport * as firabase from 'firebase/app'\r\n\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n\r\nimport * as firebase from 'firebase/app';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { auth } from 'firebase/app';\r\n\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { UserInterface } from '../shared/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  //public UserMail: string;\r\n  constructor(private afsAuth: AngularFireAuth, private afs: AngularFirestore) { }\r\n\r\n  registerUser(email: string, pass: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.afsAuth.auth.createUserWithEmailAndPassword(email, pass)\r\n        .then(userData => {\r\n          resolve(userData),\r\n            this.updateUserData(userData.user)\r\n        }).catch(err => console.log(reject(err)))\r\n    });\r\n  }\r\n\r\n  loginEmailUser(email: string, pass: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.afsAuth.auth.signInWithEmailAndPassword(email, pass)\r\n        .then(userData => resolve(userData),\r\n        err => reject(err));\r\n    });\r\n  }\r\n\r\n  loginFacebookUser() {\r\n    return this.afsAuth.auth.signInWithPopup(new auth.FacebookAuthProvider())\r\n      .then(credential => this.updateUserData(credential.user))\r\n  }\r\n\r\n  loginGoogleUser() {\r\n    return this.afsAuth.auth.signInWithPopup(new auth.GoogleAuthProvider())\r\n      .then(credential => this.updateUserData(credential.user))\r\n  }\r\n\r\n  logoutUser() {\r\n    return this.afsAuth.auth.signOut();\r\n  }\r\n\r\n  isAuth() {\r\n    return this.afsAuth.authState.pipe(map(auth => auth));\r\n  }\r\n\r\n  private updateUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const data: UserInterface = {\r\n      id: user.uid,\r\n      email: user.email,\r\n      roles: {\r\n        editor: true\r\n      }\r\n    }\r\n    return userRef.set(data, { merge: true })\r\n  }\r\n\r\n  getAuth() {\r\n    return this.afsAuth.authState.pipe(map(auth => auth));\r\n    //return this.afsAuth.authState.map(auth => auth);\r\n    ;\r\n  }\r\n\r\n  \r\n  isUserAdmin(userUid) {\r\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\r\n  }\r\n\r\n\r\n  isUser(userUid) {\r\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\r\n  }\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { ClientCleanning } from '../shared/clientCleanning';  // client data type interface class\r\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';  // Firebase modules for Database, Data list and Single object\r\n\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\r\n\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CrudService {\r\n\r\n  constructor(private afs: AngularFirestore) { }\r\n  private clientsCollection: AngularFirestoreCollection<ClientCleanning>;\r\n  private clients: Observable<ClientCleanning[]>;\r\n  private addDoc: AngularFirestoreDocument<ClientCleanning>;\r\n  private client: Observable<ClientCleanning>;\r\n  public selectedClient: ClientCleanning = {\r\n    id: null\r\n  };\r\n  // Inject AngularFireDatabase Dependency in Constructor\r\n \r\n  getAllclients() {\r\n    this.clientsCollection = this.afs.collection<ClientCleanning>('clients');\r\n    return this.clients = this.clientsCollection.snapshotChanges()\r\n      .pipe(map(changes => {\r\n        return changes.map(action => {\r\n          const data = action.payload.doc.data() as ClientCleanning;\r\n          data.id = action.payload.doc.id;\r\n          return data;\r\n        });\r\n      }));\r\n  }\r\n\r\n\r\n  getAllclientsOffers() {\r\n    this.clientsCollection = this.afs.collection('clients', ref => ref.where('oferta', '==', '1'));\r\n    return this.clients = this.clientsCollection.snapshotChanges()\r\n      .pipe(map(changes => {\r\n        return changes.map(action => {\r\n          const data = action.payload.doc.data() as ClientCleanning;\r\n          data.id = action.payload.doc.id;\r\n          return data;\r\n        });\r\n      }));\r\n  }\r\n\r\n  getOneclient(idclient: string) {\r\n    this.addDoc = this.afs.doc<ClientCleanning>(`clients/${idclient}`);\r\n    return this.client = this.addDoc.snapshotChanges().pipe(map(action => {\r\n      if (action.payload.exists === false) {\r\n        return null;\r\n      } else {\r\n        const data = action.payload.data() as ClientCleanning;\r\n        data.id = action.payload.id;\r\n        return data;\r\n      }\r\n    }));\r\n  }\r\n\r\n  addclient(client: ClientCleanning): void {\r\n    this.clientsCollection.add(client);\r\n  }\r\n  updateclient(client: ClientCleanning): void {\r\n    let idclient = client.id;\r\n    this.addDoc = this.afs.doc<ClientCleanning>(`clients/${idclient}`);\r\n    this.addDoc.update(client);\r\n  }\r\n  deleteclient(idclient: string): void {\r\n    this.addDoc = this.afs.doc<ClientCleanning>(`clients/${idclient}`);\r\n    this.addDoc.delete();\r\n  }\r\n}\r\n", "import { Injectable } from \"@angular/core\";\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(\r\n   public db: AngularFirestore,\r\n   public afAuth: AngularFireAuth\r\n ){\r\n }\r\n\r\n\r\n  getCurrentUser(){\r\n    return new Promise<any>((resolve, reject) => {\r\n      var user = firebase.auth().onAuthStateChanged(function(user){\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          reject('No user logged in');\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  updateCurrentUser(value){\r\n    return new Promise<any>((resolve, reject) => {\r\n      var user = firebase.auth().currentUser;\r\n      user.updateProfile({\r\n        displayName: value.name,\r\n        photoURL: user.photoURL\r\n      }).then(res => {\r\n        resolve(res)\r\n      }, err => reject(err))\r\n    })\r\n  }\r\n}\r\n", "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1zY2hlZHVsZS91cGRhdGUtc2NoZWR1bGUuY29tcG9uZW50LmNzcyJ9 */\"", "module.exports = \"<div class=\\\"container text-center\\\">\\r\\n    <br><br> <br><br><br><br>\\r\\n    <h1 class=\\\"h2 \\\">Update schedule <i class=\\\"far fa-clipboard\\\"></i> </h1>\\r\\n\\r\\n    <br><br>\\r\\n    <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n        <!-- Client\\r\\n                    form -->\\r\\n        <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"updateForm()\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Name:</b></label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"FirstName\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"FirstName.touched && FirstName.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least first name</p>\\r\\n                    <p *ngIf=\\\"FirstName.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Address:</b></label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"Address\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"Address.touched && Address.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least Address</p>\\r\\n                    <p *ngIf=\\\"Address.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Address shouldn't be less than 6 words</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Date:</b></label>\\r\\n\\r\\n                    <input type=\\\"date\\\" formControlName=\\\"Date\\\" class=\\\"form-control text-center\\\" required>\\r\\n                    <p *ngIf=\\\"Date.touched && Date.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter a correct date</p>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Time:</b></label>\\r\\n                    <input type=\\\"time\\\" formControlName=\\\"time\\\" class=\\\"form-control text-center\\\" required>\\r\\n                    <p *ngIf=\\\"time.touched && time.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please set the time</p>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Email:</b></label>\\r\\n                    <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter an email Address</p>\\r\\n                    <p *ngIf=\\\"email.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup> Email shouldn't be less than 2 words</p>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label><b>Mobile:</b></label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" required>\\r\\n                    <p *ngIf=\\\"mobileNumber.touched && mobileNumber.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide contact number\\r\\n                    </p>\\r\\n                    <p *ngIf=\\\"mobileNumber.errors?.pattern\\\" class=\\\"error\\\"><sup>*</sup>Use numbers only number\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 mb-4\\\">\\r\\n                    <label><b>Instructions:</b></label>\\r\\n                    <textarea rows=\\\"2\\\" cols=\\\"20\\\" type=\\\"text\\\" formControlName=\\\"Instructions\\\" class=\\\"form-control\\\"></textarea>\\r\\n                    <p *ngIf=\\\"Instructions.touched && Instructions.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide the instructions</p>\\r\\n                    <p *ngIf=\\\"Instructions.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Instructions shouldn't be less than 10 words</p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group text-center\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger gap-right\\\" (click)=\\\"ResetForm()\\\">Reset</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.valid\\\">Update</button>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n    <br><br><br>\\r\\n    <div class=\\\" text-center\\\">\\r\\n        <p class=\\\"custom-text\\\">A Company created for <strong>Detailed Residential and commercial cleaning</strong> Based in <strong>Montreal,Qc Canada</strong></p>\\r\\n    </div>\\r\\n</div>\"", "import { AuthService } from './../services/auth.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CrudService } from '../services/crud.service';\r\nimport { ActivatedRoute, Router } from \"@angular/router\"; // ActivatedRoue is used to get the current associated components information.\r\nimport { Location } from '@angular/common';  // Location service is used to go back to previous component\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n@Component({\r\n  selector: 'app-update-schedule',\r\n  templateUrl: './update-schedule.component.html',\r\n  styleUrls: ['./update-schedule.component.css']\r\n})\r\n\r\nexport class UpdateScheduleComponent implements OnInit {\r\n  editForm: FormGroup;  // Define FormGrouupdate-schedule's edit form\r\n   clientForm: FormGroup\r\n  constructor(\r\n   public authService:AuthService,\r\n    private crudApi: CrudService,       // Inject CRUD API in constructor\r\n    private fb: FormBuilder,            // Inject Form Builder service for Reactive forms\r\n    private location: Location,         // Location service to go back to previous component\r\n    private actRoute: ActivatedRoute,   // Activated route to get the current component's inforamation\r\n    private router: Router,             // Router service to navigate to specific component\r\n    private toastr: ToastrService       // Toastr service for alert message\r\n  ){ }\r\n\r\n  ngOnInit() {\r\n    this.updateForm()\r\n  }\r\n\r\n  // Accessing form control using getters\r\n  get FirstName() {\r\n    return this.editForm.get('FirstName');\r\n  }\r\n\r\n  get Address() {\r\n    return this.editForm.get('Address');\r\n  }\r\n  get Date() {\r\n    return this.editForm.get('Date');\r\n  }\r\n  get email() {\r\n    return this.editForm.get('email');\r\n  }\r\n  get time() {\r\n    return this.editForm.get('time');\r\n  }\r\n\r\n  get mobileNumber() {\r\n    return this.editForm.get('mobileNumber');\r\n  }  \r\n  get Instructions() {\r\n    return this.editForm.get('Instructions');\r\n  }  \r\n\r\n  // Contains Reactive Form logic\r\n  updateScheduleData() {\r\n    this.editForm = this.fb.group({\r\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      Address: ['' ,[Validators.required, Validators.minLength(6)]],\r\n      Date:['' ,[Validators.required]] ,\r\n      time:['' ,[Validators.required]],\r\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\r\n      Instructions:['', [Validators.required, Validators.minLength(10)]],\r\n    })\r\n  }\r\n\r\n  // Go back to previous component\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  // Below methods fire when somebody click on submit button\r\n  updateForm(){\r\n    this.crudApi.updateclient(this.editForm.value);       // Upupdate-schedule data using CRUD API\r\n    this.toastr.success(this.editForm.controls['FirstName'].value + ' updated successfully');   // Show succes message when data is successfully submited\r\n    this.router.navigate(['my-schedule']);               // Navigatupdate-schedule's list page update-schedule data is updated\r\n  }\r\n  ResetForm() {\r\n    this.editForm.reset();\r\n  } \r\n\r\n}", "// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyA6t4EsRrNcBwKGS5YhbIHRA-HmmQxhcfA\",\r\n    authDomain: \"netto-a5a4f.firebaseapp.com\",\r\n    databaseURL: \"https://netto-a5a4f.firebaseio.com\",\r\n    projectId: \"netto-a5a4f\",\r\n    storageBucket: \"netto-a5a4f.appspot.com\",\r\n    messagingSenderId: \"291519147213\"\r\n  }\r\n}\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n", "import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"], "sourceRoot": "" }