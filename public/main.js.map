{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/animations.ts","webpack:///./src/app/admin-list/admin-list.component.css","webpack:///./src/app/admin-list/admin-list.component.html","webpack:///./src/app/admin-list/admin-list.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component-name/component-name.component.css","webpack:///./src/app/component-name/component-name.component.html","webpack:///./src/app/component-name/component-name.component.ts","webpack:///./src/app/componentes_/not-found-page/not-found-page.component.html","webpack:///./src/app/componentes_/not-found-page/not-found-page.component.scss","webpack:///./src/app/componentes_/not-found-page/not-found-page.component.ts","webpack:///./src/app/componentes_/users/login/login.component.css","webpack:///./src/app/componentes_/users/login/login.component.html","webpack:///./src/app/componentes_/users/login/login.component.ts","webpack:///./src/app/componentes_/users/profile/profile.component.css","webpack:///./src/app/componentes_/users/profile/profile.component.html","webpack:///./src/app/componentes_/users/profile/profile.component.ts","webpack:///./src/app/componentes_/users/register/register.component.css","webpack:///./src/app/componentes_/users/register/register.component.html","webpack:///./src/app/componentes_/users/register/register.component.ts","webpack:///./src/app/guards_/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/my-schedule/my-schedule.component.css","webpack:///./src/app/my-schedule/my-schedule.component.html","webpack:///./src/app/my-schedule/my-schedule.component.ts","webpack:///./src/app/schedule-cleaning/schedule-cleaning.component.html","webpack:///./src/app/schedule-cleaning/schedule-cleaning.component.scss","webpack:///./src/app/schedule-cleaning/schedule-cleaning.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/crud.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/update-schedule/update-schedule.component.css","webpack:///./src/app/update-schedule/update-schedule.component.html","webpack:///./src/app/update-schedule/update-schedule.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {trigger,transition,style,animate} from '@angular/animations'\r\n\r\n   export let fade= trigger('fade',[\r\n    transition('void =>*',[\r\n      style({color:'red', opacity:0}),\r\n      animate(500,style({color:'blue', opacity:1}))\r\n    ])\r\n    \r\n    \r\n    \r\n      ]);\r\n      export let slide= trigger('slide',[\r\n        transition(':enter',[\r\n          style({transform:'translateX(-10px)'}),\r\n          animate(500)\r\n        ]),\r\n        transition(':leave',[\r\n        \r\n          animate(500, style({transform:'translateX(-100%)'}))\r\n        ])\r\n        \r\n        \r\n        \r\n          ])\r\n        \r\n    \r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWxpc3QvYWRtaW4tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\" container text-center\\\">\\n\\n    <div class=\\\"row user-details\\\">\\n        <div class=\\\"col-12\\\">\\n            <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:6%\\\" alt=\\\"profile \\\">\\n            <h5> {{Email}}</h5>\\n        </div>\\n    </div>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search...\\\" id=\\\"myInput\\\" type=\\\"search\\\">\\n    </mat-form-field>\\n    <div class=\\\"card\\\">\\n        <h1 @fade>Cleaning schedule <i class=\\\"far fa-clipboard \\\"></i> </h1>\\n\\n\\n\\n        <table class=\\\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg table-hover\\\">\\n            <thead>\\n                <tr class=\\\"text-center\\\">\\n                    <th scope=\\\"col\\\">Client Id</th>\\n                    <th scope=\\\"col\\\">First name</th>\\n                    <th scope=\\\"col\\\">Address</th>\\n                    <th scope=\\\"col\\\">Date</th>\\n                    <th scope=\\\"col\\\">Time</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                    <th scope=\\\"col\\\">Mobile number</th>\\n                    <th scope=\\\"col\\\">Instructions</th>\\n                    <th class=\\\"text-center\\\" scope=\\\"col\\\">Edit</th>\\n                </tr>\\n            </thead>\\n\\n            <tbody class=\\\"text-center \\\" *ngFor=\\\"let profile of clients  | grdFilter: {FirstName: searchText, Address:searchText,  email: searchText, mobileNumber: searchText, time: searchText}\\\">\\n\\n                <tr>\\n                    <th @fade scope=\\\"row\\\">{{profile.id}}</th>\\n                    <td @fade>{{profile.FirstName}}</td>\\n                    <td @fade>{{profile.Address}}</td>\\n                    <td @fade>{{profile.Date}}</td>\\n                    <td @fade>{{profile.time}}</td>\\n                    <td @fade>{{profile.email}}</td>\\n                    <td @fade>{{profile.mobileNumber}}</td>\\n                    <td @fade>{{profile.Instructions}}</td>\\n                    <td class=\\\"text-center action-block\\\">\\n\\n                        <i class=\\\"far fa-edit\\\" routerLink=\\\"/update-schedule/{{profile.id}}\\\"></i>\\n                        <i class=\\\"far fa-trash-alt\\\" (click)=\\\"onDeleteclient(profile.id)\\\"></i></td>\\n\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n</div>\"","\nimport {fade,slide} from '../../animations'\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport {  FormGroup } from '@angular/forms';\nimport { CrudService } from '../services/crud.service';  // CRUD API service class\nimport { ClientCleanning } from '../shared/clientCleanning';   // client interface class for Data types.\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-list',\n  templateUrl: './admin-list.component.html',\n  styleUrls: ['./admin-list.component.css'],\n \nanimations:[\n  fade,\n  slide\n]\n\n\n})\nexport class AdminListComponent implements OnInit {\n  public clientForm: FormGroup;\n   //Busqueda\n   public searchText: string;\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public crudApi: CrudService, // Inject client CRUD services in constructor.\n    public toastr: ToastrService // Toastr service for alert message\n    \n  ) { }\n\n  public clients: ClientCleanning[];\n  public isAdmin: any = null;\n  public userUid: string = null;\n  public selectedClient: ClientCleanning;\n  public First: string;\n  public Email: string;\n  public Mobile: string;\n  public img: string;\n\n\n  ngOnInit() {\n\n\n    this.getListClients();\n    this.getCurrentUser();\n\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n        this.userUid = auth.uid;\n        this.Email = auth.email;\n\n        this.img = auth.photoURL;\n\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\n          \n        })\n      }\n    })\n  }\n\n\n\n  getListClients() {\n    this.crudApi.getAllclients()\n      .subscribe(clients => {\n        this.clients = clients;\n      });\n    this.router.navigate(['admin-list'])\n  }\n\n  onDeleteclient(idClient: string): void {\n    const confirmacion = confirm('Are you sure?');\n    if (confirmacion) {\n      this.crudApi.deleteclient(idClient);\n    }\n  }\n\n  onPreUpdateclient(client: ClientCleanning) {\n    console.log('CLIENT', client);\n    this.crudApi.selectedClient = Object.assign({}, client);\n  }\n  ResetForm() {\n    this.clientForm.reset();\n  }\n  submitclientData() {\n    this.crudApi.addclient(this.clientForm.value);\n    this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); \n    this.ResetForm(); \n    this.router.navigate(['profile']);\n  };\n\n}\n","\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  exports: [ RouterModule ],\n\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AppRoutingModule { }\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-component-name></app-component-name>\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","//Services\r\n\r\nimport { AuthService } from './services/auth.service';\r\nimport { UserService } from './services/user.service';\r\nimport { CrudService } from './services/crud.service';\r\nimport { AuthGuard } from './guards_/auth.guard';\r\n//Modules\r\n\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { RouterModule,Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport {MatInputModule,} from '@angular/material/input';\r\nimport {MatButtonModule,MatToolbarModule,MatSidenavModule, MatIconModule, MatListModule} from '@angular/material';\r\n//Components\r\n\r\nimport { NotFoundPageComponent } from './componentes_/not-found-page/not-found-page.component';\r\nimport { AddClientComponent } from './schedule-cleaning/schedule-cleaning.component';\r\nimport { UpdateScheduleComponent } from './update-schedule/update-schedule.component';\r\nimport { MyScheduleComponent } from './my-schedule/my-schedule.component';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport{LoginComponent} from './componentes_/users/login/login.component';\r\nimport{RegisterComponent} from './componentes_/users/register/register.component'\r\nimport{AdminListComponent}from './admin-list/admin-list.component';\r\nimport{ProfileComponent} from './componentes_/users/profile/profile.component';\r\n//Firebase\r\n\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { GrdFilterPipe } from './services/search.service';\r\nimport { ComponentNameComponent } from './component-name/component-name.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\n\r\n\r\nconst routes: Routes = [\r\n  \r\n  { path: 'home', component: HomeComponent },\r\n  { path: '', component: HomeComponent },\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  { path: 'schedule-cleaning', component: AddClientComponent, canActivate:[AuthGuard]},\r\n  { path: 'my-schedule', component: MyScheduleComponent, canActivate:[AuthGuard]},\r\n  {path: 'profile', component: ProfileComponent, canActivate:[AuthGuard] },\r\n  { path: 'admin-list', component: AdminListComponent, canActivate:[AuthGuard]   },\r\n  { path: 'update-schedule/:id', component: UpdateScheduleComponent, canActivate:[AuthGuard]   },\r\n  {path: '**', component: NotFoundPageComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddClientComponent,\r\n    UpdateScheduleComponent,\r\n    AdminListComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    NotFoundPageComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    ProfileComponent,\r\n    MyScheduleComponent,\r\n    GrdFilterPipe,\r\n    ComponentNameComponent\r\n\r\n    \r\n    \r\n  ],\r\n  imports: [RouterModule,CommonModule,RouterModule,\r\n            RouterModule.forRoot(routes),\r\n            BrowserModule,CommonModule,\r\n            AngularFireModule.initializeApp(environment.firebase), // Main Angular fire module \r\n            AngularFireDatabaseModule,  // Firebase database module \r\n            ReactiveFormsModule,        // Reactive forms module\r\n            AppRoutingModule,           // Main routing module\r\n            BrowserAnimationsModule,    // Required animations module for Toastr\r\n            FormsModule,AngularFireStorageModule,MatInputModule,MatButtonModule,MatToolbarModule,MatSidenavModule,\r\n\r\n       AngularFireAuthModule,     \r\n       ToastrModule.forRoot({\r\n       timeOut: 3000,\r\n       positionClass: 'toast-bottom-right',\r\n       preventDuplicates: true,      \r\n    }),\r\n\r\n    NgxPaginationModule,\r\n\r\n    LayoutModule,\r\n\r\n    MatIconModule,\r\n\r\n    MatListModule  // NGX pagination module\r\n    \r\n  ],\r\n  exports:[MatInputModule,MatButtonModule,MatToolbarModule\r\n\r\n  ],\r\n  providers: [AuthService,UserService, AuthGuard,AngularFireAuth,AngularFirestore,CrudService,MatSidenavModule],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".sidenav-container {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n    background: black;\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.sidenav .mat-toolbar {\\r\\n    background: black;\\r\\n    color: white\\r\\n}\\r\\n\\r\\n.mat-toolbar.mat-primary {\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.body {\\r\\n    margin: 0;\\r\\n    color: white\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space1 {\\r\\n    flex: 0 0 auto;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n    width: 400px;\\r\\n    height: 200px;\\r\\n    margin: 10px;\\r\\n    border: 1px solid #555;\\r\\n}\\r\\n\\r\\n.register {\\r\\n    padding-left: 1rem;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-toolbar {\\r\\n    position: fixed;\\r\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\nh1.example-app-name {\\r\\n    margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-sidenav-container {\\r\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n    flex: 1;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-sidenav-container {\\r\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n     `<body>` to be our scrolling element for mobile layouts. */\\r\\n    flex: 1 0 auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50LW5hbWUvY29tcG9uZW50LW5hbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEI7O0FBRUQ7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtDQUNoQjs7QUFFRDtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0NBQ2Y7O0FBRUQ7SUFDSSx5QkFBaUI7SUFBakIsaUJBQWlCO0lBQ2pCLE9BQU87SUFDUCxXQUFXO0NBQ2Q7O0FBRUQ7SUFDSSxVQUFVO0lBQ1YsWUFBWTtDQUNmOztBQUVEO0lBQ0ksZUFBZTtDQUNsQjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBRUQ7SUFDSSxhQUFhO0lBQ2IsY0FBYztJQUNkLGFBQWE7SUFDYix1QkFBdUI7Q0FDMUI7O0FBRUQ7SUFDSSxtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixPQUFPO0lBQ1AsVUFBVTtJQUNWLFFBQVE7SUFDUixTQUFTO0NBQ1o7O0FBRUQ7SUFDSSxnQkFBZ0I7SUFDaEIsK0VBQStFO0lBQy9FLFdBQVc7Q0FDZDs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJOzJGQUN1RjtJQUN2RixRQUFRO0NBQ1g7O0FBRUQ7SUFDSTtnRUFDNEQ7SUFDNUQsZUFBZTtDQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC1uYW1lL2NvbXBvbmVudC1uYW1lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2lkZW5hdiB7XHJcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcclxuICAgIHdpZHRoOiAyMDBweDtcclxufVxyXG5cclxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcclxuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xyXG4gICAgY29sb3I6IHdoaXRlXHJcbn1cclxuXHJcbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XHJcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG5cclxuLmJvZHkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgY29sb3I6IHdoaXRlXHJcbn1cclxuXHJcbi5leGFtcGxlLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcblxyXG4uZXhhbXBsZS1maWxsLXJlbWFpbmluZy1zcGFjZTEge1xyXG4gICAgZmxleDogMCAwIGF1dG87XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzU1NTtcclxufVxyXG5cclxuLnJlZ2lzdGVyIHtcclxuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1pcy1tb2JpbGUgLmV4YW1wbGUtdG9vbGJhciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAvKiBNYWtlIHN1cmUgdGhlIHRvb2xiYXIgd2lsbCBzdGF5IG9uIHRvcCBvZiB0aGUgY29udGVudCBhcyBpdCBzY3JvbGxzIHBhc3QuICovXHJcbiAgICB6LWluZGV4OiAyO1xyXG59XHJcblxyXG5oMS5leGFtcGxlLWFwcC1uYW1lIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNpZGVuYXYtY29udGFpbmVyIHtcclxuICAgIC8qIFdoZW4gdGhlIHNpZGVuYXYgaXMgbm90IGZpeGVkLCBzdHJldGNoIHRoZSBzaWRlbmF2IGNvbnRhaW5lciB0byBmaWxsIHRoZSBhdmFpbGFibGUgc3BhY2UuIFRoaXNcclxuICAgICBjYXVzZXMgYDxtYXQtc2lkZW5hdi1jb250ZW50PmAgdG8gYWN0IGFzIG91ciBzY3JvbGxpbmcgZWxlbWVudCBmb3IgZGVza3RvcCBsYXlvdXRzLiAqL1xyXG4gICAgZmxleDogMTtcclxufVxyXG5cclxuLmV4YW1wbGUtaXMtbW9iaWxlIC5leGFtcGxlLXNpZGVuYXYtY29udGFpbmVyIHtcclxuICAgIC8qIFdoZW4gdGhlIHNpZGVuYXYgaXMgZml4ZWQsIGRvbid0IGNvbnN0cmFpbiB0aGUgaGVpZ2h0IG9mIHRoZSBzaWRlbmF2IGNvbnRhaW5lci4gVGhpcyBhbGxvd3MgdGhlXHJcbiAgICAgYDxib2R5PmAgdG8gYmUgb3VyIHNjcm9sbGluZyBlbGVtZW50IGZvciBtb2JpbGUgbGF5b3V0cy4gKi9cclxuICAgIGZsZXg6IDEgMCBhdXRvO1xyXG59Il19 */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n    <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\" [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n        <mat-toolbar>Menu</mat-toolbar>\\r\\n        <mat-nav-list>\\r\\n            <a mat-list-item routerLink=\\\"/admin-list\\\" *ngIf=\\\"isAdmin == true; else noAdmin\\\" class=\\\"text-white register\\\">Admin</a>\\r\\n            <a mat-list-item routerLink=\\\"/schedule-cleaning\\\" class=\\\"text-white register\\\">Create task</a>\\r\\n            <a mat-list-item routerLink=\\\"/profile\\\" class=\\\"text-white register\\\">Profile</a>\\r\\n            <a mat-list-item routerLink=\\\"/my-schedule\\\" class=\\\"text-white register\\\">My Orders</a>\\r\\n        </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n            <span> <img class=\\\"user-image\\\" src=\\\"/assets/Netto.png\\\"> Netto</span>\\r\\n\\r\\n            <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n\\r\\n            <a class=\\\"a\\\" routerLink=\\\"/login\\\" *ngIf=\\\"!isLogin\\\">\\r\\n                <span class=\\\"text-white\\\"> Login</span>\\r\\n            </a>\\r\\n            <span class=\\\"example-fill-remaining-space1\\\"></span>\\r\\n\\r\\n\\r\\n            <a class=\\\"b\\\" routerLink=\\\"/register\\\" *ngIf=\\\"!isLogin\\\">\\r\\n\\r\\n\\r\\n                <span class=\\\"text-white register\\\"> Register</span>\\r\\n            </a>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <a class=\\\"nav-item register \\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"isLogin\\\">\\r\\n                <a class=\\\"text-white\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n            </a>\\r\\n\\r\\n        </mat-toolbar>\\r\\n        <!-- Add Content Hddddere -->\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<a class=\\\"b\\\" routerLink=\\\"/schedule-cleaning\\\" *ngIf=\\\"isLogin\\\">\\r\\n\\r\\n\\r\\n\\r\\n    <span class=\\\"text-white register\\\"> Schedule</span>\\r\\n</a>\\r\\n<a class=\\\"b\\\" routerLink=\\\"/profile\\\" *ngIf=\\\"isLogin\\\">\\r\\n\\r\\n\\r\\n    <span class=\\\"text-white register\\\"> Profile</span>\\r\\n</a>\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-component-name',\r\n  templateUrl: './component-name.component.html',\r\n  styleUrls: ['./component-name.component.css']\r\n})\r\nexport class ComponentNameComponent {\r\n  public clientForm: FormGroup;\r\n  public isLogin: boolean;\r\n  public nombreUsuario: string;\r\n  public emailUsuario: string;\r\n\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n    public authService: AuthService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  public noAdmin: any = null;\r\n  public isAdmin: any = null;\r\n  public userUid: string = null;\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.authService.isAuth().subscribe(auth => {\r\n      if (auth) {\r\n        this.isLogin = true;\r\n        this.nombreUsuario = auth.displayName;\r\n        this.emailUsuario = auth.email;\r\n\r\n        this.userUid = auth.uid;\r\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\r\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\r\n          // this.isAdmin = true;\r\n\r\n        })\r\n      }\r\n      else {\r\n        this.isLogin = false;\r\n        this.isAdmin = false;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  logout() {\r\n    this.authService.logoutUser();\r\n    this.router.navigate(['home']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid mt-6\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto text-center\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <h1>Oops!</h1>\\r\\n            <h2>Someone needs to go now!</h2>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <img src=\\\"assets/404.gif\\\" class=\\\"preloader-icon\\\" alt=\\\"assets/preloader.gif\\\">\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-primary btn-lg\\\"><i class=\\\"fa fa-home\\\"></i> Back home</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzXy9ub3QtZm91bmQtcGFnZS9ub3QtZm91bmQtcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.scss']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".btn-google {\\r\\n    background: #dd4b39;\\r\\n    text: white\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50ZXNfL3VzZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQkFBb0I7SUFDcEIsV0FBVztDQUNkIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50ZXNfL3VzZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWdvb2dsZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZGQ0YjM5O1xyXG4gICAgdGV4dDogd2hpdGVcclxufSJdfQ== */\"","module.exports = \"<section id=\\\"login\\\" class=\\\"mb-5 mt-5\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 mx-auto\\\">\\r\\n                <div class=\\\"card_login\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body text-center\\\">\\r\\n                            <form (submit)=\\\"onLogin()\\\">\\r\\n                                <h1 class=\\\"h3 mb-3 font-weight-normal\\\"> <img class=\\\"user-image\\\" src=\\\"/assets/Netto.png\\\"> Login</h1>\\r\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                                    Something is wrong!\\r\\n                                </div>\\r\\n                                <mat-form-field class=\\\"col-sm-12\\\">\\r\\n                                    <input matInput type=\\\"email\\\" placeholder=\\\"Email:\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\r\\n                                </mat-form-field>\\r\\n\\r\\n                                <mat-form-field class=\\\"col-sm-12\\\">\\r\\n                                    <input matInput type=\\\"password\\\" placeholder=\\\"Password:\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\r\\n                                </mat-form-field>\\r\\n\\r\\n                                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"btn btn-block bg-warn \\\">LOGIN</button>\\r\\n                                <hr>\\r\\n                                <a routerLink=\\\"/register\\\" class=\\\"form-control\\\">Are you new ?</a>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <button mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-block btn-social btn-facebook\\\" (click)=\\\"onLoginFacebook()\\\">\\r\\n                    <span class=\\\"fab fa-facebook\\\"></span>\\r\\n                    FACEBOOK\\r\\n                  </button>\\r\\n                                    <button mat-raised-button color=\\\"warn\\\" class=\\\"btn btn-block btn-social btn-google\\\" (click)=\\\"onLoginGoogle()\\\">\\r\\n                    <span class=\\\"fab fa-goodreads-g\\\"></span>\\r\\n                    GOOGLE\\r\\n                  </button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router} from '@angular/router';\r\nimport { AuthService} from '../../../services/auth.service';\r\nimport {  FormGroup,Validators,FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  \r\n  public clientForm: FormGroup;\r\n  constructor(public afAuth: AngularFireAuth, private router: Router, private authService: AuthService) { }\r\n  public email: string = '';\r\n  public password: string = '';\r\n  public fb: FormBuilder;\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n  clientsForm() {\r\n    this.clientForm = this.fb.group({\r\n    \r\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n     \r\n    })\r\n    \r\n  }\r\n\r\n  onLogin(): void {\r\n    this.authService.loginEmailUser(this.email, this.password)\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n\r\n  onLoginGoogle(): void {\r\n    this.authService.loginGoogleUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n  onLoginFacebook(): void {\r\n    this.authService.loginFacebookUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n\r\n  onLoginRedirect(): void {\r\n    this.router.navigate(['home']);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzXy91c2Vycy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section id=\\\"profile\\\" class=\\\" \\\">\\r\\n    <br>\\r\\n    <div @slide class=\\\"offset-lg-4 col-lg-4 col-sm-6 col-12 main-section text-center card\\\">\\r\\n        <div class=\\\"row  \\\">\\r\\n            <div class=\\\"col-lg-12 col-sm-12 col-12 \\\">\\r\\n                <br>\\r\\n                <h1>My schedule <i class=\\\"far fa-clipboard \\\"></i></h1>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row user-details\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:20%\\\" alt=\\\"profile \\\">\\r\\n                <h5> {{Email}}</h5>\\r\\n                <p>\\r\\n\\r\\n                </p>\\r\\n\\r\\n                <hr>\\r\\n\\r\\n                <div class=\\\"card\\\">\\r\\n                    <br>\\r\\n                    <div class=\\\"card-title\\\">\\r\\n\\r\\n                        <h4>Set Cleaning task</h4>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <span>Hit <u><b>Create</b></u> to set date&time, Address and instructions for cleaning you place,\\r\\n                                         and hit <u><b>My orders</b></u> to check, update or delete the task</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-footer\\\">\\r\\n                        <p>\\r\\n                            <a href=\\\"https://www.facebook.com/Sunny-Hostals-261669591256712/\\\"><i class=\\\"fab fa-facebook-f\\\"></i></a>\\r\\n\\r\\n                            <a href=\\\"https://www.instagram.com/misael_jr76/\\\"><i class=\\\"fab fa-instagram\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                                </a>\\r\\n                            <a href=\\\"https://twitter.com/Sunnyhostals1\\\"><i class=\\\"fab fa-twitter\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                                </a>\\r\\n                        </p>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <br>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</section>\"","  import { Component, OnInit } from '@angular/core';\r\n  import { AuthService } from '../../../services/auth.service';\r\n  import {  FormGroup } from '@angular/forms';\r\n  import { CrudService } from '../../../services/crud.service';  // CRUD API service class\r\n  import { ClientCleanning } from '../../../shared/clientCleanning';   // client interface class for Data types.\r\n  import { ToastrService } from 'ngx-toastr';\r\n  import { Router } from '@angular/router';\r\n  import {fade,slide} from '../../../../animations'\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n  animations:[\r\n    fade,\r\n    slide\r\n  ]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n    public clientForm: FormGroup;\r\n    constructor(\r\n      private authService: AuthService,\r\n      private router: Router,\r\n      public crudApi: CrudService, // Inject client CRUD services in constructor.\r\n      public toastr: ToastrService // Toastr service for alert message\r\n    ) { }\r\n  \r\n    public clients: ClientCleanning[];\r\n    public isAdmin: any = null;\r\n    public userUid: string = null;\r\n    public selectedClient: ClientCleanning;\r\n    public First: string;\r\n    public Email: string;\r\n    public Mobile: string;\r\n    public img: string;\r\n  \r\n  \r\n    ngOnInit() {\r\n  \r\n  \r\n      this.getListClients();\r\n      this.getCurrentUser();\r\n  \r\n    }\r\n  \r\n    getCurrentUser() {\r\n      this.authService.isAuth().subscribe(auth => {\r\n        if (auth) {\r\n          this.userUid = auth.uid;\r\n          this.Email = auth.email;\r\n  \r\n          this.img = auth.photoURL;\r\n  \r\n          this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\r\n            this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\r\n            // this.isAdmin = true;\r\n          })\r\n        }\r\n      })\r\n    }\r\n  \r\n  \r\n  \r\n    getListClients() {\r\n      this.crudApi.getAllclients()\r\n        .subscribe(clients => {\r\n          this.clients = clients;\r\n        });\r\n      this.router.navigate(['profile'])\r\n    }\r\n  \r\n    onDeleteclient(idClient: string): void {\r\n      const confirmacion = confirm('Are you sure?');\r\n      if (confirmacion) {\r\n        this.crudApi.deleteclient(idClient);\r\n      }\r\n    }\r\n  \r\n    onPreUpdateclient(client: ClientCleanning) {\r\n      console.log('CLIENT', client);\r\n      this.crudApi.selectedClient = Object.assign({}, client);\r\n    }\r\n    ResetForm() {\r\n      this.clientForm.reset();\r\n    }\r\n    submitclientData() {\r\n      this.crudApi.addclient(this.clientForm.value); \r\n      this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!');\r\n      this.ResetForm();  \r\n      this.router.navigate(['admin-list']);\r\n    };\r\n  \r\n  }\r\n  ","module.exports = \".form-control.login-user {\\r\\n  border: 0px solid #fff !important;\\r\\n}\\r\\n.btn-social{\\r\\n  position: relative;\\r\\n  text-align: center;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  color: #fff;\\r\\n  border-color: rgba(0,0,0,0.2);\\r\\n}\\r\\n.btn-facebook{\\r\\n  background: #3b5998;\\r\\n}\\r\\n.btn-google{\\r\\n  background: #dd4b39;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50ZXNfL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQ0FBa0M7Q0FDbkM7QUFDRDtFQUNFLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGlCQUFpQjtFQUNqQix3QkFBd0I7RUFDeEIsWUFBWTtFQUNaLDhCQUE4QjtDQUMvQjtBQUVEO0VBQ0Usb0JBQW9CO0NBQ3JCO0FBQ0Q7RUFDRSxvQkFBb0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRlc18vdXNlcnMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRyb2wubG9naW4tdXNlciB7XHJcbiAgYm9yZGVyOiAwcHggc29saWQgI2ZmZiAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4tc29jaWFse1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLDAsMCwwLjIpO1xyXG59XHJcblxyXG4uYnRuLWZhY2Vib29re1xyXG4gIGJhY2tncm91bmQ6ICMzYjU5OTg7XHJcbn1cclxuLmJ0bi1nb29nbGV7XHJcbiAgYmFja2dyb3VuZDogI2RkNGIzOTtcclxufSJdfQ== */\"","module.exports = \"<section id=\\\"register\\\" class=\\\"mb-5 mt-5\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 mx-auto\\\">\\r\\n                <div class=\\\"card_register\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body text-center\\\">\\r\\n                            <form (ngSubmit)=\\\"onAddUser()\\\">\\r\\n                                <h1 class=\\\"h3 mb-3 font-weight-normal\\\"> <img class=\\\"user-image\\\" src=\\\"/assets/Netto.png\\\"> Register</h1>\\r\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                                    <h3>it's been an error!</h3>>\\r\\n                                </div>\\r\\n                                <mat-form-field class=\\\"col-sm-12\\\">\\r\\n                                    <input matInput type=\\\"email\\\" placeholder=\\\"Email:\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\r\\n                                </mat-form-field>\\r\\n\\r\\n                                <mat-form-field class=\\\"col-sm-12\\\">\\r\\n                                    <input matInput type=\\\"password\\\" placeholder=\\\"Password:\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\r\\n                                </mat-form-field>\\r\\n                                <hr>\\r\\n                                <div class=\\\"form-group text-center\\\">\\r\\n                                    <h5>Select image:</h5>\\r\\n                                    <input class=\\\"bg-light\\\" type=\\\"file\\\" (change)=\\\"onUpload($event)\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"progress\\\">\\r\\n                                    <div [style.visibility]=\\\"(uploadPercent) ? 'hidden' : 'visible'\\\" class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width]=\\\"(uploadPercent | async) +'%'\\\"></div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <br>\\r\\n                                <input #imageUser type=\\\"hidden\\\" [value]=\\\"urlImage | async\\\">\\r\\n                                <button *ngIf=\\\"urlImage | async; else btnDisabled\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\"> Register</button>\\r\\n                                <ng-template #btnDisabled>\\r\\n                                    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" disabled=true class=\\\"btn btn-lg btn-warning btn-block\\\">Register</button>\\r\\n                                </ng-template>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <a routerLink=\\\"/login\\\" class=\\\"form-control login-user\\\">Do you have account?</a>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <button mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-block btn-social btn-facebook\\\" (click)=\\\"onLoginFacebook()\\\">\\r\\n                    <span class=\\\"fab fa-facebook-f\\\"></span> \\r\\n                    FACEBOOK\\r\\n                  </button>\\r\\n                                    <button mat-raised-button color=\\\"warn\\\" class=\\\"btn btn-block btn-social btn-google\\\" (click)=\\\"onLoginGoogle()\\\">\\r\\n                    <span class=\\\"fab fa-goodreads-g\\\"></span>\\r\\n                    GOOGLE\\r\\n                  </button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private authService: AuthService, private storage: AngularFireStorage) { }\r\n  @ViewChild('imageUser') inputImageUser: ElementRef;\r\n\r\n  public email: string = '';\r\n  public password: string = '';\r\n\r\n  uploadPercent: Observable<number>;\r\n  urlImage: Observable<string>;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onUpload(e) {\r\n \r\n    const id = Math.random().toString(36).substring(2);\r\n    const file = e.target.files[0];\r\n    const filePath = `uploads/profile_${id}`;\r\n    const ref = this.storage.ref(filePath);\r\n    const task = this.storage.upload(filePath, file);\r\n    this.uploadPercent = task.percentageChanges();\r\n    task.snapshotChanges().pipe(finalize(() => this.urlImage = ref.getDownloadURL())).subscribe();\r\n  }\r\n  onAddUser() {\r\n    this.authService.registerUser(this.email, this.password)\r\n      .then((res) => {\r\n        this.authService.isAuth().subscribe(user => {\r\n          if (user) {\r\n            user.updateProfile({\r\n              displayName: '',\r\n              photoURL: this.inputImageUser.nativeElement.value\r\n            }).then(() => {\r\n              this.router.navigate(['']);\r\n            }).catch((error) => console.log('error', error));\r\n          }\r\n        });\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n  onLoginGoogle(): void {\r\n    this.authService.loginGoogleUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n  onLoginFacebook(): void {\r\n    this.authService.loginFacebookUser()\r\n      .then((res) => {\r\n        this.onLoginRedirect();\r\n      }).catch(err => console.log('err', err.message));\r\n  }\r\n\r\n  onLoginRedirect(): void {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { take, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private afsAuth: AngularFireAuth, private router: Router) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    return this.afsAuth.authState\r\n      .pipe(take(1))\r\n      .pipe(map(authState => !!authState))\r\n      .pipe(tap(auth => {\r\n        if (!auth) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container \\\">\\n\\n    <div class=\\\"card center-align\\\">\\n\\n        <div class=\\\"card-title text-center\\\">\\n\\n            <h1> Schedule your cleaning services</h1>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n            <img class=\\\"img-responsive float-center\\\" style=\\\"width:100%\\\" src=\\\"/assets/limpiezaa.jpg\\\">\\n\\n            <div class=\\\"card-footer  text-center\\\">\\n                <p>This company provides cleaning services by using\\n                    <a href=\\\"https://Aqui va el app/\\\" title=\\\"Learn Free Full Stack Software Development\\\">\\n           Netto App<br>\\n          </a> a cleaning services App available in the\\n                    <a href=\\\"\\\" title=\\\"Learn Free Full Stack Software Development\\\">\\n           APP STORE\\n          </a><br></p>\\n                <div @slide>\\n                    <a href=\\\"https://www.facebook.com/Sunny-Hostals-261669591256712/\\\"><i class=\\\"fab fa-facebook-f\\\"></i></a>\\n\\n                    <a href=\\\"https://www.instagram.com/misael_jr76/\\\"><i class=\\\"fab fa-instagram\\\" aria-hidden=\\\"true\\\"></i>\\n                      </a>\\n                    <a href=\\\"https://twitter.com/Sunnyhostals1\\\"><i class=\\\"fab fa-twitter\\\" aria-hidden=\\\"true\\\"></i>\\n                      </a></div>\\n            </div>\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {fade,slide} from '../../animations'\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  animations:[\n    fade,\n    slide\n  ]\n})\nexport class HomeComponent implements OnInit {\n\n  \n\n  constructor(\n \n    public router: Router,\n\n  ) { }\n\n  ngOnInit(){}\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXNjaGVkdWxlL215LXNjaGVkdWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\" container text-center\\\">\\n    <br>\\n    <div class=\\\"row user-details\\\">\\n        <div class=\\\"col-12 \\\">\\n            <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:10%\\\" alt=\\\"profile \\\">\\n            <h5> {{Email}}</h5>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <h1>Cleaning schedule <i class=\\\"far fa-clipboard animated infinite heartBeat delay-2s\\\"></i> </h1>\\n\\n        <table class=\\\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg table-hover\\\">\\n            <thead>\\n                <tr class=\\\"text-center\\\">\\n                    <th scope=\\\"col\\\">Client Id</th>\\n                    <th scope=\\\"col\\\">First name</th>\\n                    <th scope=\\\"col\\\">Address</th>\\n                    <th scope=\\\"col\\\">Date</th>\\n                    <th scope=\\\"col\\\">Time</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                    <th scope=\\\"col\\\">Mobile number</th>\\n                    <th scope=\\\"col\\\">Instructions</th>\\n                    <th class=\\\"text-center\\\" scope=\\\"col\\\">Edit</th>\\n                </tr>\\n            </thead>\\n\\n            <tbody class=\\\"text-center \\\" *ngFor=\\\"let profile of clients\\\">\\n\\n                <tr *ngIf=\\\"profile.userUid == userUid\\\">\\n                    <th scope=\\\"row\\\">{{profile.id}}</th>\\n                    <td>{{profile.FirstName}}</td>\\n                    <td>{{profile.Address}}</td>\\n                    <td>{{profile.Date}}</td>\\n                    <td>{{profile.time}}</td>\\n                    <td>{{profile.email}}</td>\\n                    <td>{{profile.mobileNumber}}</td>\\n                    <td>{{profile.Instructions}}</td>\\n                    <td class=\\\"text-center action-block\\\">\\n\\n                        <i class=\\\"far fa-edit\\\" routerLink=\\\"/update-schedule/{{profile.id}}\\\"></i>\\n                        <i class=\\\"far fa-trash-alt\\\" (click)=\\\"onDeleteclient(profile.id)\\\"></i></td>\\n\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<div></div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service'\nimport { ClientCleanning } from '../shared/clientCleanning';   // client interface class for Data types.\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { CrudService } from '../services/crud.service';    // CRUD services API\nimport {  FormGroup } from '@angular/forms'; // Reactive form services\n\n@Component({\n  selector: 'app-my-schedule',\n  templateUrl: './my-schedule.component.html',\n  styleUrls: ['./my-schedule.component.css']\n})\nexport class MyScheduleComponent implements OnInit {\n  public clientForm: FormGroup;\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public crudApi: CrudService, // Inject client CRUD services in constructor.\n    public toastr: ToastrService // Toastr service for alert message\n  ) { }\n\n  public clients: ClientCleanning[];\n  public isAdmin: any = null;\n  public userUid: string = null;\n  public selectedClient: ClientCleanning;\n  public First: string;\n  public Email: string;\n  public Mobile: string;\n  public img: string;\n\n  ngOnInit() {\n\n    this.getListClients();\n    this.getCurrentUser();\n  }\n\n  getCurrentUser() {\n    this.authService.isAuth().subscribe(auth => {\n      if (auth) {\n        this.userUid = auth.uid;\n        this.Email = auth.email;\n\n        this.img = auth.photoURL;\n\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\n          // this.isAdmin = true;\n        })\n      }\n    })\n  }\n\n  getListClients() {\n    this.crudApi.getAllclients()\n      .subscribe(clients => {\n        this.clients = clients;\n      });\n    this.router.navigate(['my-schedule'])\n  }\n\n  onDeleteclient(idClient: string): void {\n    const confirmation = confirm('Are you sure?');\n    if (confirmation) {\n      this.crudApi.deleteclient(idClient);\n    }\n  }\n\n  onPreUpdateclient(client: ClientCleanning) {\n    console.log('CLIENT', client);\n    this.crudApi.selectedClient = Object.assign({}, client);\n  }\n  ResetForm() {\n    this.clientForm.reset();\n  }\n  submitclientData() {\n    this.crudApi.addclient(this.clientForm.value); // Submit client data using CRUD API\n    this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!'); // Show success message when data is successfully submited\n    this.ResetForm();  // Reset form when clicked on reset button\n    this.router.navigate(['profile']);\n  };\n\n}\n","module.exports = \"<div class=\\\"container text-center\\\">\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div @slide class=\\\"row user-details\\\">\\r\\n        <div class=\\\"col-12 \\\">\\r\\n            <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:10%\\\" alt=\\\"profile \\\">\\r\\n            <h5> {{Email}}</h5>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 mx-auto\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <br>\\r\\n                <h1 class=\\\"animated\\\">Schedule <i class=\\\"far fa-clipboard  animated infinite bounce delay-2s\\\"></i> </h1>\\r\\n\\r\\n                <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n\\r\\n                    <form [formGroup]=\\\"clientForm\\\" (ngSubmit)=\\\"submitclientData(clientForm)\\\">\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6 mb-3\\\">\\r\\n                                <label><b>Name:</b></label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"FirstName\\\" class=\\\"form-control\\\" required>\\r\\n                                <p *ngIf=\\\"FirstName.touched && FirstName.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least first name</p>\\r\\n                                <p *ngIf=\\\"FirstName.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 mb-3\\\">\\r\\n                                <label><b>Address:</b></label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"Address\\\" class=\\\"form-control\\\" required>\\r\\n                                <p *ngIf=\\\"Address.touched && Address.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least Address</p>\\r\\n                                <p *ngIf=\\\"Address.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Address shouldn't be less than 6 words</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6 mb-3\\\">\\r\\n                                <label><b>Date:</b></label>\\r\\n\\r\\n                                <input type=\\\"date\\\" formControlName=\\\"Date\\\" class=\\\"form-control text-center\\\" required>\\r\\n                                <p *ngIf=\\\"Date.touched && Date.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter a correct date</p>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 mb-3\\\">\\r\\n                                <label><b>Time:</b></label>\\r\\n                                <input type=\\\"time\\\" formControlName=\\\"time\\\" class=\\\"form-control text-center\\\" required>\\r\\n                                <p *ngIf=\\\"time.touched && time.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please set the time</p>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6 mb-3\\\">\\r\\n                                <label><b>email:</b></label>\\r\\n                                <input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"name@email.com\\\" class=\\\"form-control\\\" required>\\r\\n                                <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter an email Address</p>\\r\\n                                <p *ngIf=\\\"email.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup> Email shouldn't be less than 2 words</p>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-md-6 mb-3\\\">\\r\\n                                <label><b>Mobile:</b></label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" required>\\r\\n                                <p *ngIf=\\\"mobileNumber.touched && mobileNumber.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide contact number\\r\\n                                </p>\\r\\n                                <p *ngIf=\\\"mobileNumber.errors?.pattern\\\" class=\\\"error\\\"><sup>*</sup>Use numbers only number\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12 mb-4\\\">\\r\\n                                <label><b>Instructions:</b></label>\\r\\n                                <textarea rows=\\\"2\\\" cols=\\\"20\\\" type=\\\"text\\\" formControlName=\\\"Instructions\\\" class=\\\"form-control\\\" required></textarea>\\r\\n                                <p *ngIf=\\\"Instructions.touched && Instructions.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide the instructions</p>\\r\\n                                <p *ngIf=\\\"Instructions.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Instructions shouldn't be less than 10 words</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger gap-right\\\" (click)=\\\"ResetForm()\\\">Reset</button>\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!clientForm.valid\\\">Create </button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <br><br>\\r\\n                <div class=\\\" text-center\\\">\\r\\n                    <p class=\\\"custom-text\\\">A Company created for <strong>Detailed Residential and commercial cleaning</strong> Based in <strong>Montreal,Qc Canada</strong></p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlLWNsZWFuaW5nL3NjaGVkdWxlLWNsZWFuaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from '../services/crud.service';    // CRUD services API\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'; // Reactive form services\r\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ClientCleanning } from '../shared/clientCleanning';\r\nimport {   Input } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport {fade,slide} from '../../animations'\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './schedule-cleaning.component.html',\r\n  styleUrls: ['./schedule-cleaning.component.scss'],\r\n  animations:[\r\n    slide\r\n  ]\r\n})\r\n\r\nexport class AddClientComponent implements OnInit {\r\n  public clientForm: FormGroup;  // Define FormGroup to client's form\r\n \r\n  constructor(\r\n    public authService: AuthService,\r\n    private router:Router,\r\n    public crudApi: CrudService,  // CRUD API services\r\n    public fb: FormBuilder,       // Form Builder service for Reactive forms\r\n    public toastr: ToastrService  // Toastr service for alert message\r\n  ) { }\r\n  @Input() userUid: string;\r\n  public clients: ClientCleanning[];\r\n  public isAdmin: any = null;\r\n \r\n  public selectedClient: ClientCleanning;\r\n  public First: string;\r\n  public Email: string;\r\n  public Mobile: string;\r\n  public img: string;\r\n \r\n  ngOnInit() {\r\n    this.crudApi.getAllclients();  // Call GetclientsList() before main form is being called\r\n    this.clientsForm(); \r\n    \r\n    this.getCurrentUser();             // Call client form when component is ready\r\n  }\r\n  getCurrentUser() {\r\n    this.authService.isAuth().subscribe(auth => {\r\n      if (auth) {\r\n        this.userUid = auth.uid;\r\n        this.Email = auth.email;\r\n\r\n        this.img = auth.photoURL;\r\n\r\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\r\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\r\n          // this.isAdmin = true;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Reactive client form\r\n  clientsForm() {\r\n    this.clientForm = this.fb.group({\r\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      Address: ['' ,[Validators.required, Validators.minLength(6)]],\r\n      Date:['' ,[Validators.required]] ,\r\n      time:['' ,[Validators.required]],\r\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\r\n      Instructions:['', [Validators.required, Validators.minLength(10)]],\r\n    })  \r\n  }\r\n\r\n  // Accessing form control using getters\r\n  get FirstName() {\r\n    return this.clientForm.get('FirstName');\r\n  }\r\n  \r\n\r\n  get Address() {\r\n    return this.clientForm.get('Address');\r\n  }  \r\n  get Date() {\r\n    return this.clientForm.get('Date');\r\n  }\r\n\r\n  get time() {\r\n    return this.clientForm.get('time');\r\n  }\r\n  get email() {\r\n    return this.clientForm.get('email');\r\n  }\r\n\r\n  get mobileNumber() {\r\n    return this.clientForm.get('mobileNumber');\r\n  }\r\n  get Instructions() {\r\n    return this.clientForm.get('Instructions');\r\n  }\r\n\r\n  // Reset client form's values\r\n  ResetForm() {\r\n    this.clientForm.reset();\r\n  }  \r\n \r\n  submitclientData(clientForm: NgForm): void {\r\n if (clientForm.value.id == null) {\r\n     clientForm.value.userUid = this.userUid;\r\n    this.crudApi.addclient(this.clientForm.value);\r\n    this.router.navigate(['profile']); // Submit client data using CRUD API\r\n    this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!')}\r\n    \r\n    else {\r\n      // Update\r\n      this.crudApi.updateclient(clientForm.value);\r\n      this.router.navigate(['profile']);\r\n    } \r\n   };\r\n   /*submitclientData(clientForm: NgForm): void {\r\n    if (clientForm.value.id == null) {\r\n      // New \r\n      clientForm.value.userUid = this.userUid;\r\n      this.crudApi.addclient(clientForm.value);\r\n      this.toastr.success(this.clientForm.controls['FirstName'].value + ' successfully added!');\r\n    } else {\r\n      // Update\r\n      this.crudApi.updateclient(clientForm.value);\r\n      this.router.navigate(['profile']);*/\r\n\r\n   \r\n    }\r\n","import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { map } from 'rxjs/operators';\r\nimport { auth } from 'firebase/app';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { UserInterface } from '../shared/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  constructor(private afsAuth: AngularFireAuth, private afs: AngularFirestore) { }\r\n\r\n  registerUser(email: string, pass: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.afsAuth.auth.createUserWithEmailAndPassword(email, pass)\r\n        .then(userData => {\r\n          resolve(userData),\r\n            this.updateUserData(userData.user)\r\n        }).catch(err => console.log(reject(err)))\r\n    });\r\n  }\r\n\r\n  loginEmailUser(email: string, pass: string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.afsAuth.auth.signInWithEmailAndPassword(email, pass)\r\n        .then(userData => resolve(userData),\r\n        err => reject(err));\r\n    });\r\n  }\r\n\r\n  loginFacebookUser() {\r\n    return this.afsAuth.auth.signInWithPopup(new auth.FacebookAuthProvider())\r\n      .then(credential => this.updateUserData(credential.user))\r\n  }\r\n\r\n  loginGoogleUser() {\r\n    return this.afsAuth.auth.signInWithPopup(new auth.GoogleAuthProvider())\r\n      .then(credential => this.updateUserData(credential.user))\r\n  }\r\n\r\n  logoutUser() {\r\n    return this.afsAuth.auth.signOut();\r\n  }\r\n\r\n  isAuth() {\r\n    return this.afsAuth.authState.pipe(map(auth => auth));\r\n  }\r\n\r\n  private updateUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const data: UserInterface = {\r\n      id: user.uid,\r\n      email: user.email,\r\n      roles: {\r\n        editor: true\r\n      }\r\n    }\r\n    return userRef.set(data, { merge: true })\r\n  }\r\n\r\n  getAuth() {\r\n    return this.afsAuth.authState.pipe(map(auth => auth));\r\n\r\n    ;\r\n  }\r\n\r\n  \r\n  isUserAdmin(userUid) {\r\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\r\n  }\r\n\r\n\r\n  isUser(userUid) {\r\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ClientCleanning } from '../shared/clientCleanning';  \r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CrudService {\r\n\r\n  constructor(private afs: AngularFirestore) { }\r\n  private clientsCollection: AngularFirestoreCollection<ClientCleanning>;\r\n  private clients: Observable<ClientCleanning[]>;\r\n  private addDoc: AngularFirestoreDocument<ClientCleanning>;\r\n  private client: Observable<ClientCleanning>;\r\n  public selectedClient: ClientCleanning = {\r\n    id: null\r\n  };\r\n \r\n  getAllclients() {\r\n    this.clientsCollection = this.afs.collection<ClientCleanning>('clients');\r\n    return this.clients = this.clientsCollection.snapshotChanges()\r\n      .pipe(map(changes => {\r\n        return changes.map(action => {\r\n          const data = action.payload.doc.data() as ClientCleanning;\r\n          data.id = action.payload.doc.id;\r\n          return data;\r\n        });\r\n      }));\r\n  }\r\n\r\n\r\n  getAllclientsOffers() {\r\n    this.clientsCollection = this.afs.collection('clients', ref => ref.where('oferta', '==', '1'));\r\n    return this.clients = this.clientsCollection.snapshotChanges()\r\n      .pipe(map(changes => {\r\n        return changes.map(action => {\r\n          const data = action.payload.doc.data() as ClientCleanning;\r\n          data.id = action.payload.doc.id;\r\n          return data;\r\n        });\r\n      }));\r\n  }\r\n\r\n  getOneclient(idclient: string) {\r\n    this.addDoc = this.afs.doc<ClientCleanning>(`clients/${idclient}`);\r\n    return this.client = this.addDoc.snapshotChanges().pipe(map(action => {\r\n      if (action.payload.exists === false) {\r\n        return null;\r\n      } else {\r\n        const data = action.payload.data() as ClientCleanning;\r\n        data.id = action.payload.id;\r\n        return data;\r\n      }\r\n    }));\r\n  }\r\n\r\n  addclient(client: ClientCleanning): void {\r\n    this.clientsCollection.add(client);\r\n  }\r\n  updateclient(client: ClientCleanning): void {\r\n    let idclient = client.id;\r\n    this.addDoc = this.afs.doc(`clients/${idclient}`);\r\n    this.addDoc.update(client);\r\n  }\r\n  deleteclient(idclient: string): void {\r\n    this.addDoc = this.afs.doc<ClientCleanning>(`clients/${idclient}`);\r\n    this.addDoc.delete();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'grdFilter'\n})\nexport class GrdFilterPipe implements PipeTransform {\n  transform(items: any, filter: any, defaultFilter: boolean): any {\n    if (!filter){\n      return items;\n    }\n\n    if (!Array.isArray(items)){\n      return items;\n    }\n\n    if (filter && Array.isArray(items)) {\n      let filterKeys = Object.keys(filter);\n\n      if (defaultFilter) {\n        return items.filter(item =>\n            filterKeys.reduce((x, keyName) =>\n                (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\n      }\n      else {\n        return items.filter(item => {\n          return filterKeys.some((keyName) => {\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\n          });\n        });\n      }\n    }\n  }\n}","import { Injectable } from \"@angular/core\";\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(\r\n   public db: AngularFirestore,\r\n   public afAuth: AngularFireAuth\r\n ){\r\n }\r\n\r\n\r\n  getCurrentUser(){\r\n    return new Promise<any>((resolve, reject) => {\r\n      var user = firebase.auth().onAuthStateChanged(function(user){\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          reject('No user logged in');\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  updateCurrentUser(value){\r\n    return new Promise<any>((resolve, reject) => {\r\n      var user = firebase.auth().currentUser;\r\n      user.updateProfile({\r\n        displayName: value.name,\r\n        photoURL: user.photoURL\r\n      }).then(res => {\r\n        resolve(res)\r\n      }, err => reject(err))\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1zY2hlZHVsZS91cGRhdGUtc2NoZWR1bGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\" container text-center\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row user-details\\\">\\r\\n        <div class=\\\"col-12 \\\">\\r\\n            <img src=\\\"{{img}} \\\" class=\\\"rounded-circle img-thumbnail\\\" style=\\\"width:10%\\\" alt=\\\"profile \\\">\\r\\n            <h5> {{Email}}</h5>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card col-xs-12 col-sm-8 col-md-6 mx-auto\\\">\\r\\n        <br>\\r\\n        <h1 @fade @slide class=\\\"h2 \\\">Update schedule <i class=\\\"far fa-clipboard\\\"></i> </h1>\\r\\n\\r\\n        <br><br>\\r\\n        <div class=\\\"row justify-content-center align-items-center\\\">\\r\\n\\r\\n            <form @fade [formGroup]=\\\"clientForm\\\" (ngSubmit)=\\\"updateForm()\\\" novalidate>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6 mb-3\\\">\\r\\n                        <label><b>Name:</b></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"FirstName\\\" class=\\\"form-control\\\" required>\\r\\n                        <p *ngIf=\\\"FirstName.touched && FirstName.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least first name</p>\\r\\n                        <p *ngIf=\\\"FirstName.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Name shouldn't be less than 2 words</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6 mb-3\\\">\\r\\n                        <label><b>Address:</b></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"Address\\\" class=\\\"form-control\\\" required>\\r\\n                        <p *ngIf=\\\"Address.touched && Address.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter at least Address</p>\\r\\n                        <p *ngIf=\\\"Address.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Address shouldn't be less than 6 words</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6 mb-3\\\">\\r\\n                        <label><b>Date:</b></label>\\r\\n\\r\\n                        <input type=\\\"date\\\" formControlName=\\\"Date\\\" class=\\\"form-control text-center\\\" required>\\r\\n                        <p *ngIf=\\\"Date.touched && Date.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter a correct date</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6 mb-3\\\">\\r\\n                        <label><b>Time:</b></label>\\r\\n                        <input type=\\\"time\\\" formControlName=\\\"time\\\" class=\\\"form-control text-center\\\" required>\\r\\n                        <p *ngIf=\\\"time.touched && time.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please set the time</p>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6 mb-3\\\">\\r\\n                        <label><b>Email:</b></label>\\r\\n                        <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" required>\\r\\n                        <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please enter an email Address</p>\\r\\n                        <p *ngIf=\\\"email.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup> Email shouldn't be less than 2 words</p>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-6 mb-3\\\">\\r\\n                        <label><b>Mobile:</b></label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" required>\\r\\n                        <p *ngIf=\\\"mobileNumber.touched && mobileNumber.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide contact number\\r\\n                        </p>\\r\\n                        <p *ngIf=\\\"mobileNumber.errors?.pattern\\\" class=\\\"error\\\"><sup>*</sup>Use numbers only number\\r\\n                        </p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12 mb-4\\\">\\r\\n                        <label><b>Instructions:</b></label>\\r\\n                        <textarea rows=\\\"2\\\" cols=\\\"20\\\" type=\\\"text\\\" formControlName=\\\"Instructions\\\" class=\\\"form-control\\\"></textarea>\\r\\n                        <p *ngIf=\\\"Instructions.touched && Instructions.invalid\\\" class=\\\"error\\\"><sup>*</sup>Please provide the instructions</p>\\r\\n                        <p *ngIf=\\\"Instructions.errors?.minlength\\\" class=\\\"error\\\"><sup>*</sup>Instructions shouldn't be less than 10 words</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger gap-right\\\" (click)=\\\"ResetForm()\\\">Reset</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!clientForm.valid\\\">Update</button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\" text-center\\\">\\r\\n            <p class=\\\"custom-text\\\">A Company created for <strong>Detailed Residential and commercial cleaning</strong> Based in <strong>Montreal,Qc Canada</strong></p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { AuthService } from './../services/auth.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CrudService } from '../services/crud.service';\r\nimport { ActivatedRoute, Router } from \"@angular/router\"; \r\nimport { Location } from '@angular/common';  \r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {fade,slide} from '../../animations';\r\nimport { ClientCleanning } from '../shared/clientCleanning';\r\n@Component({\r\n  selector: 'app-update-schedule',\r\n  templateUrl: './update-schedule.component.html',\r\n  styleUrls: ['./update-schedule.component.css'],\r\n  animations:[\r\n    fade,\r\n    slide\r\n  ]\r\n})\r\n\r\nexport class UpdateScheduleComponent implements OnInit {\r\n  \r\n  public clientForm: FormGroup;\r\n  public clients: ClientCleanning[];\r\n  public isAdmin: any = null;\r\n  public userUid: string = null;\r\n  public selectedClient: ClientCleanning;\r\n  public First: string;\r\n  public Email: string;\r\n  public Mobile: string;\r\n  public img: string;\r\n\r\n  constructor(\r\n   public authService:AuthService,\r\n    private crudApi: CrudService,    \r\n    private fb: FormBuilder,          \r\n    private location: Location,        \r\n    private actRoute: ActivatedRoute,   \r\n    private router: Router,             \r\n    private toastr: ToastrService       \r\n  ){ }\r\n\r\n  ngOnInit() {\r\n    this.getCurrentUser();\r\n\r\n    this.updateScheduleData();   \r\n    const id = this.actRoute.snapshot.paramMap.get('id');  \r\n    this.crudApi.getOneclient(id).subscribe(data => {\r\n      this.clientForm.setValue(data) \r\n    })\r\n\r\n\r\n  }\r\n  \r\n  getCurrentUser() {\r\n    this.authService.isAuth().subscribe(auth => {\r\n      if (auth) {\r\n        this.userUid = auth.uid;\r\n        this.Email = auth.email;\r\n\r\n        this.img = auth.photoURL;\r\n\r\n        this.authService.isUserAdmin(this.userUid).subscribe(userRole => {\r\n          this.isAdmin = Object.assign({}, userRole.roles).hasOwnProperty('admin');\r\n          // this.isAdmin = true;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  get id() {\r\n    return this.clientForm.get('id');\r\n  }\r\n\r\n  get FirstName() {\r\n    return this.clientForm.get('FirstName');\r\n  }\r\n\r\n  get Address() {\r\n    return this.clientForm.get('Address');\r\n  }\r\n  get Date() {\r\n    return this.clientForm.get('Date');\r\n  }\r\n  get email() {\r\n    return this.clientForm.get('email');\r\n  }\r\n  get time() {\r\n    return this.clientForm.get('time');\r\n  }\r\n\r\n  get mobileNumber() {\r\n    return this.clientForm.get('mobileNumber');\r\n  }  \r\n  get Instructions() {\r\n    return this.clientForm.get('Instructions');\r\n  }  \r\n  get useruid() {\r\n    return this.clientForm.get('userUid')\r\n  }\r\n\r\n\r\n  updateScheduleData() {\r\n    this.clientForm = this.fb.group({\r\n      id:[''],\r\n      userUid:[''],\r\n      FirstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      Address: ['' ,[Validators.required, Validators.minLength(6)]],\r\n      Date:['' ,[Validators.required]] ,\r\n      time:['' ,[Validators.required]],\r\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\r\n      Instructions:['', [Validators.required, Validators.minLength(10)]],\r\n    })\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  updateForm(){\r\n    this.crudApi.updateclient(this.clientForm.value);       \r\n    this.toastr.success(this.clientForm.controls['FirstName'].value + ' updated successfully');   \r\n    this.router.navigate(['profile']);           \r\n  }\r\n  ResetForm() {\r\n    this.clientForm.reset();\r\n  } \r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyA6t4EsRrNcBwKGS5YhbIHRA-HmmQxhcfA\",\r\n    authDomain: \"netto-a5a4f.firebaseapp.com\",\r\n    databaseURL: \"https://netto-a5a4f.firebaseio.com\",\r\n    projectId: \"netto-a5a4f\",\r\n    storageBucket: \"netto-a5a4f.appspot.com\",\r\n    messagingSenderId: \"291519147213\"\r\n\r\n  }  \r\n};\r\n\r\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}